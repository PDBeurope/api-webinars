{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "Python 3.7.8 64-bit ('rdkit-env': conda)",
   "display_name": "Python 3.7.8 64-bit ('rdkit-env': conda)",
   "metadata": {
    "interpreter": {
     "hash": "ff61d13abe230febdcf9f05a768048a47be2ac8377dcb96e6daf2ab6fcfbf665"
    }
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "# pdbeccdutils\n",
    "\n",
    "This exercise demonstrates the use of the [pdbeccdutils](https://github.com/PDBeurope/ccdutils) - a set of python tools for working with small molecule components in the Protein Data Bank archive. \n",
    "\n",
    "You can use two main resources as input data for the package. [wwPDB CCD](http://www.wwpdb.org/data/ccd) contains models of all the ligands e.g. drug molecules, cofactors etc. commonly found in the PDB archive, whereas [wwPDB BIRD](http://www.wwpdb.org/data/bird) is composed of biologically interesting polymeric molecules such as peptides or oligosaccharides.\n",
    "\n",
    "CCD components can be downloaded as a bundle either from [wwPDB FTP area](ftp://ftp.wwpdb.org/pub/pdb/data/monomers/components.cif.gz), or from [PDBe FTP area](http://ftp.ebi.ac.uk/pub/databases/msd/pdbechem_v2/components.cif). The components from the PDBe area are enriched with information about common fragments found in the molecules, their molecular scaffolds as well as links to popular small molecule chemistry databases. You can also use PDBeChem to download individual components from the following link using proper CCD id substitution: <ftp://ftp.ebi.ac.uk/pub/databases/msd/pdbechem_v2/H/HEM/HEM.cif>.\n",
    "\n",
    "'BIRD' molecules can be downloaded in the *.tar.gz format from the following location: <ftp://ftp.wwpdb.org/pub/pdb/data/bird/prd/prdcc-split.tar.gz>\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "pdbeccdutils relies on [RDKit](https://www.rdkit.org/) for the most of its functionality and as such it is best to be used along with [conda environment](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)\n",
    "\n",
    "Install and activate conda environment with rdkit using the following command:\n",
    "\n",
    "```bash\n",
    "conda create -c conda-forge -n rdkit-env rdkit python=3.7\n",
    "conda activate rdkit-env\n",
    "```"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "You can then install the pdbeccdutils either from [PYPi](https://pypi.org/project/pdbeccdutils/) or directly from the [repository](https://github.com/PDBeurope/ccdutils) using one of the following commands:\n",
    "\n",
    "```bash\n",
    "pip install pdbeccdutils\n",
    "pip install git+https://github.com/PDBeurope/ccdutils.git@master#egg=pdbeccdutils\n",
    "```"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "The pdbeccdutils API contains a number of different modules stored in namespaces with respect to their functionality. All off the modules along with useful tips are documented in the [documentation](https://pdbeurope.github.io/ccdutils/). In this exercise we will go through some of the use cases."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "The structure of the package looks roughly like this:\n",
    "\n",
    "```text\n",
    "pdbeccdutils\n",
    "  computations\n",
    "    parity_method.py\n",
    "  core\n",
    "    ccd_reader.py\n",
    "    ccd_writer.py\n",
    "    component.py\n",
    "    depictions.py\n",
    "    fragment_library.py\n",
    "  scripts\n",
    "    process_components_cif_cli.py\n",
    "    setup_pubchem_library.py\n",
    "  utils\n",
    "    pubchem_downloader.py\n",
    "    web_services.py\n",
    "```"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "Before we start we need to download a CCD component for demonstaration purposes. We are going to use Heme (CCD ID: [HEM](https://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/HEM))."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "\n",
    "def download_component(ccd_id):\n",
    "    response = requests.get(f'http://ftp.ebi.ac.uk/pub/databases/msd/pdbechem_v2/{ccd_id[0]}/{ccd_id}/{ccd_id}.cif')\n",
    "    cif_path = f'{ccd_id}.cif'\n",
    "\n",
    "    with open(cif_path, 'wb') as fp:\n",
    "        fp.write(response.content)\n",
    "    \n",
    "    return cif_path\n",
    "\n",
    "hem_path = download_component('HEM')"
   ]
  },
  {
   "source": [
    "## Structure reading\n",
    "\n",
    "Structure reading can be done using `ccd_reader.py` module located in the `pdbeccdutils.core` module. By default, the molecules comes [sanitized](https://www.rdkit.org/docs/RDKit_Book.html#molecular-sanitization) using RDKit sanitization procedure and our internal process. However, this option can be turned off by specifying optional parameter `sanitize=False` to the function.\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "CCDReaderResult(warnings=[], errors=[], component=<pdbeccdutils.core.component.Component object at 0x7f86f7154710>)"
      ]
     },
     "metadata": {},
     "execution_count": 2
    }
   ],
   "source": [
    "from pdbeccdutils.core import ccd_reader\n",
    "\n",
    "ccd_reader_result = ccd_reader.read_pdb_cif_file(hem_path)\n",
    "ccd_reader_result"
   ]
  },
  {
   "source": [
    "CCDReaderResult contains a list of possible warnings and errors that were encountered during the structure parsing. There is also a convenience method that allows reading in multiple chemical components provided they are listed in different data blocks in a single mmCIF file at the same time."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "{'HEM': CCDReaderResult(warnings=[], errors=[], component=<pdbeccdutils.core.component.Component object at 0x7f86f6804050>)}"
      ]
     },
     "metadata": {},
     "execution_count": 3
    }
   ],
   "source": [
    "components_result = ccd_reader.read_pdb_components_file('HEM.cif', sanitize=False)\n",
    "components_result"
   ]
  },
  {
   "source": [
    "## Component object\n",
    "\n",
    "The component object contains a list of usefull properties retrieved directly from the CCD file as well as shorthand functions to the RDKit functionality in the following excercise we will go through some of them."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<pdbeccdutils.core.component.Component at 0x7f86f7154710>"
      ]
     },
     "metadata": {},
     "execution_count": 4
    }
   ],
   "source": [
    "component = ccd_reader_result.component\n",
    "component"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "'C34 H32 Fe N4 O4'"
      ]
     },
     "metadata": {},
     "execution_count": 5
    }
   ],
   "source": [
    "component.formula\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "'KABFMIBPWCXCRK-RGGAHWMASA-L'"
      ]
     },
     "metadata": {},
     "execution_count": 6
    }
   ],
   "source": [
    "component.inchikey"
   ]
  },
  {
   "source": [
    "### Scaffolds\n",
    "\n",
    "One of the shorthand function allows you to calculate molecular scaffolds using [get_scaffolds()](https://pdbeurope.github.io/ccdutils/pdbeccdutils.core.html#pdbeccdutils.core.component.Component.get_scaffolds) method. You can choose a number of different scaffolds to compute, if you don't provide any parameter [Murcko scaffold](https://www.rdkit.org/docs/source/rdkit.Chem.Scaffolds.MurckoScaffold.html) is computed by default.\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "[<rdkit.Chem.rdchem.Mol at 0x7f86f7cb9ad0>]"
      ]
     },
     "metadata": {},
     "execution_count": 7
    }
   ],
   "source": [
    "# at first scaffolds property is empty\n",
    "component.scaffolds\n",
    "[]\n",
    "\n",
    "# returns an array of rdkit Mol objects with scaffolds found.\n",
    "component.get_scaffolds()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "SubstructureMapping(name='MurckoScaffold', smiles='C1=CC2=[N+]3C1=Cc1ccc4n1[Fe-2]31n3c(ccc3=CC3=[N+]1C(=C4)C=C3)=C2', source='RDKit scaffolds', mappings=[['CHA', 'CHB', 'CHC', 'CHD', 'C1A', 'C2A', 'C3A', 'C4A', 'C1B', 'C2B', 'C3B', 'C4B', 'C1C', 'C2C', 'C3C', 'C4C', 'C1D', 'C2D', 'C3D', 'C4D', 'NA', 'NB', 'NC', 'ND', 'FE']])"
      ]
     },
     "metadata": {},
     "execution_count": 8
    }
   ],
   "source": [
    "scaffold_details = component.scaffolds[0]\n",
    "scaffold_details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "[['CHA',\n",
       "  'CHB',\n",
       "  'CHC',\n",
       "  'CHD',\n",
       "  'C1A',\n",
       "  'C2A',\n",
       "  'C3A',\n",
       "  'C4A',\n",
       "  'C1B',\n",
       "  'C2B',\n",
       "  'C3B',\n",
       "  'C4B',\n",
       "  'C1C',\n",
       "  'C2C',\n",
       "  'C3C',\n",
       "  'C4C',\n",
       "  'C1D',\n",
       "  'C2D',\n",
       "  'C3D',\n",
       "  'C4D',\n",
       "  'NA',\n",
       "  'NB',\n",
       "  'NC',\n",
       "  'ND',\n",
       "  'FE']]"
      ]
     },
     "metadata": {},
     "execution_count": 9
    }
   ],
   "source": [
    "# list of lists of atom names with atoms that are part of the scaffold.\n",
    "scaffold_details.mappings"
   ]
  },
  {
   "source": [
    "### Fragments\n",
    "\n",
    "pdbeccdutils package contains also a shorthand functions to enable searching through fragment libraries. By default the code is supplied with a hand-curated library that is internally used by the PDBe as well as collaborating resources ENAMINE and DSI. You can read more about the molecular fragments the built-in library contains in the [documentation](https://pdbeurope.github.io/ccdutils/guide/fragments.html) as well as about an input file format in case you want to supply your own fragment library."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "from pdbeccdutils.core.fragment_library import FragmentLibrary\n",
    "\n",
    "# if you dont provide any parameter to the FragmentLibrary constructor\n",
    "# supplied fragment library is used\n",
    "library = FragmentLibrary()\n",
    "fragments = component.library_search(library)\n",
    "len(fragments)\n"
   ],
   "cell_type": "code",
   "metadata": {},
   "execution_count": 10,
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "metadata": {},
     "execution_count": 10
    }
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "SubstructureMapping(name='pyrrole', smiles='c1cc[nH]c1', source='PDBe', mappings=((4, 5, 6, 7, 38), (21, 22, 23, 24, 40)))"
      ]
     },
     "metadata": {},
     "execution_count": 11
    }
   ],
   "source": [
    "fragments[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "1 instance(s) of the fragment porphin-like found. SMILES:C1~C~C2~C~C3~C~C~C(~C~C4~C~C~C(~C~C5~C~C~C(~C~C~1~N~2)~N~5)~N~4)~N~3\n2 instance(s) of the fragment pyrrole found. SMILES:c1cc[nH]c1\n"
     ]
    }
   ],
   "source": [
    "for f in component.fragments:\n",
    "    print(f'{len(f.mappings)} instance(s) of the fragment {f.name} found. SMILES:{f.smiles}')"
   ]
  },
  {
   "source": [
    "### Molecular depictions\n",
    "\n",
    "component object exposes method [compute_2d()](https://pdbeurope.github.io/ccdutils/pdbeccdutils.core.html#pdbeccdutils.core.component.Component.compute_2d) that takes [DepictionManager](https://pdbeurope.github.io/ccdutils/pdbeccdutils.core.html#pdbeccdutils.core.depictions.DepictionManager) object as an argument. This enables you to take advantage of depiction templates supplied with the package. Alternativelly, you can provide paths to your own depiction templates and templates from PubChem. You build a library of pubchem templates using the following [script](https://pdbeurope.github.io/ccdutils/pdbeccdutils.scripts.html#module-pdbeccdutils.scripts.setup_pubchem_library_cli).\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from rdkit.Chem.Draw import IPythonConsole # this import allows you to display images directly in the jupyter notebook\n",
    "from IPython.core.display import SVG # allows to display SVG images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "DepictionResult(source=<DepictionSource.Template: 2>, template_name='hem', mol=<rdkit.Chem.rdchem.RWMol object at 0x7f86f81bd330>, score=0.0)"
      ]
     },
     "metadata": {},
     "execution_count": 14
    }
   ],
   "source": [
    "from pdbeccdutils.core.depictions import DepictionManager\n",
    "\n",
    "# create an instance of the depiction manager\n",
    "d = DepictionManager()\n",
    "result_2d = component.compute_2d(d)\n",
    "result_2d"
   ]
  },
  {
   "source": [
    "We can use the score that is part of the result to find out the quality of the depiction. Generally, the lower the better. Higher values indicate bonds crossings and crowded atoms."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "metadata": {},
     "execution_count": 15
    }
   ],
   "source": [
    "# depiction score\n",
    "result_2d.score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<rdkit.Chem.rdchem.RWMol at 0x7f86f81bd330>"
      ],
      "image/png": "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\n"
     },
     "metadata": {},
     "execution_count": 16
    }
   ],
   "source": [
    "# and the depiction itself\n",
    "result_2d.mol"
   ]
  },
  {
   "source": [
    "Let's have a look at the example where molecular depiction cannot be drawn as collision free. We are going to use [Adamantone](https://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/ADO) as an example."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "Depiction score is: 1.0\n"
     ]
    },
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<rdkit.Chem.rdchem.RWMol at 0x7f86f8e128b0>"
      ],
      "image/png": "\n"
     },
     "metadata": {},
     "execution_count": 17
    }
   ],
   "source": [
    "ado_path = download_component('ADO')\n",
    "ado = ccd_reader.read_pdb_cif_file(ado_path).component\n",
    "ado_depiction_result = ado.compute_2d(d)\n",
    "\n",
    "print(f'Depiction score is: {ado_depiction_result.score}')\n",
    "ado_depiction_result.mol\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<IPython.core.display.SVG object>"
      ],
      "image/svg+xml": "<svg baseProfile=\"full\" height=\"500px\" version=\"1.1\" viewBox=\"0 0 500 500\" width=\"500px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:rdkit=\"http://www.rdkit.org/xml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<!-- END OF HEADER -->\n<rect height=\"500\" style=\"opacity:1.0;fill:#FFFFFF;stroke:none\" width=\"500\" x=\"0\" y=\"0\"> </rect>\n<path class=\"bond-0\" d=\"M 180.18,240.098 L 193.395,217.635\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-1\" d=\"M 180.18,254.302 L 193.395,276.765\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-1\" d=\"M 189.508,253.35 L 198.758,269.074\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-2\" d=\"M 270.697,146.456 L 258.175,153.822\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-3\" d=\"M 295.198,146.456 L 308.09,153.822\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-3\" d=\"M 292.904,154.96 L 301.928,160.116\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-4\" d=\"M 386.443,240.098 L 373.225,217.635\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-5\" d=\"M 386.443,254.302 L 373.225,276.765\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-5\" d=\"M 377.115,253.349 L 367.862,269.073\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-6\" d=\"M 295.198,347.95 L 308.09,340.584\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-6\" d=\"M 292.904,339.446 L 301.928,334.289\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-7\" d=\"M 270.697,347.95 L 258.175,340.584\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-8\" d=\"M 194.021,203.431 L 181.71,178.813\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-8\" d=\"M 199.797,195.927 L 191.179,178.694\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-9\" d=\"M 214.156,207.556 L 220.972,206.332\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-9\" d=\"M 220.972,206.332 L 227.789,205.109\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-10\" d=\"M 185.26,164.608 L 201.255,148.612\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-11\" d=\"M 161.576,168.956 L 152.868,167.509\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-12\" d=\"M 222.165,148.612 L 232.295,153.822\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-12\" d=\"M 219.786,156.972 L 226.877,160.619\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-13\" d=\"M 207.231,134.408 L 202.799,106.429\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-14\" d=\"M 245.01,168.026 L 242.867,181.953\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-14\" d=\"M 242.867,181.953 L 240.724,195.88\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-15\" d=\"M 132.674,157.495 L 123.033,131.803\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-16\" d=\"M 102.839,121.789 L 96.8071,120.788\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 79.656,109.119 L 74.8356,96.2733\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 74.8356,96.2733 L 70.0152,83.4273\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 71.6768,112.113 L 66.8564,99.2675\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 66.8564,99.2675 L 62.036,86.4215\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-18\" d=\"M 72.4912,124.821 L 64.7986,134.175\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-18\" d=\"M 64.7986,134.175 L 57.1061,143.53\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-19\" d=\"M 334.328,153.822 L 344.458,148.612\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-20\" d=\"M 321.611,168.026 L 323.753,181.953\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-20\" d=\"M 323.753,181.953 L 325.895,195.88\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-21\" d=\"M 365.621,148.612 L 382.186,164.608\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-21\" d=\"M 362.186,157.142 L 373.78,168.339\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-22\" d=\"M 359.365,134.408 L 363.652,106.661\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-23\" d=\"M 385.79,178.813 L 372.795,203.431\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-24\" d=\"M 406.122,168.787 L 414.824,167.253\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 352.463,207.556 L 345.646,206.332\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 345.646,206.332 L 338.83,205.109\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 351.924,198.801 L 347.152,197.944\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 347.152,197.944 L 342.381,197.087\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-26\" d=\"M 435.048,174.004 L 450.52,192.444\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-26\" d=\"M 441.577,168.526 L 457.049,186.966\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-27\" d=\"M 372.795,290.969 L 385.79,315.587\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-28\" d=\"M 351.994,286.928 L 345.646,288.068\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-28\" d=\"M 345.646,288.068 L 339.299,289.207\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-29\" d=\"M 382.186,329.792 L 365.621,345.788\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-29\" d=\"M 373.78,326.061 L 362.186,337.259\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-30\" d=\"M 406.591,325.138 L 413.58,326.142\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-31\" d=\"M 344.454,345.788 L 334.332,340.584\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-32\" d=\"M 359.266,359.993 L 363.321,388.84\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-33\" d=\"M 321.611,326.38 L 323.753,312.45\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-33\" d=\"M 323.753,312.45 L 325.895,298.52\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-34\" d=\"M 352.606,399.686 L 337.207,411.718\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-34\" d=\"M 357.853,406.402 L 342.454,418.433\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-35\" d=\"M 232.291,340.584 L 222.169,345.788\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 245.01,326.38 L 242.867,312.45\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 242.867,312.45 L 240.724,298.52\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 235.944,323.497 L 234.444,313.746\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 234.444,313.746 L 232.944,303.995\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-37\" d=\"M 201.255,345.788 L 185.26,329.792\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-37\" d=\"M 204.883,337.363 L 193.686,326.165\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-38\" d=\"M 207.259,359.993 L 202.97,387.734\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-39\" d=\"M 181.71,315.587 L 194.021,290.969\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-40\" d=\"M 161.107,325.39 L 153.974,326.519\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-41\" d=\"M 214.625,286.928 L 220.972,288.068\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-41\" d=\"M 220.972,288.068 L 227.32,289.207\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-42\" d=\"M 130.225,322.267 L 114.911,303.353\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-43\" d=\"M 91.1619,299.101 L 86.0165,299.916\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 64.6331,293.132 L 56.976,283.675\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 56.976,283.675 L 49.3189,274.218\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 58.0096,298.495 L 50.3525,289.038\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 50.3525,289.038 L 42.6954,279.582\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-45\" d=\"M 64.3453,310.017 L 59.4355,322.806\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-45\" d=\"M 59.4355,322.806 L 54.5257,335.595\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-46\" d=\"M 246.56,210.085 L 261.2,225.091\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-46\" d=\"M 261.2,225.091 L 275.841,240.098\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-47\" d=\"M 319.885,210.085 L 304.878,225.091\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-47\" d=\"M 304.878,225.091 L 289.872,240.098\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-48\" d=\"M 319.885,284.316 L 304.878,269.309\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-48\" d=\"M 304.878,269.309 L 289.872,254.302\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-49\" d=\"M 246.56,284.316 L 261.2,269.309\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-49\" d=\"M 261.2,269.309 L 275.841,254.302\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"192.58\" y=\"249.331\"><tspan>CHA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"282.77\" y=\"141.484\"><tspan>CHB</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"373.575\" y=\"249.331\"><tspan>CHC</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"282.77\" y=\"357.183\"><tspan>CHD</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"197.573\" y=\"212.664\"><tspan>C1A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"193.321\" y=\"173.841\"><tspan>C2A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"208.357\" y=\"143.64\"><tspan>C3A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"230.94\" y=\"163.055\"><tspan>C4A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"184.149\" y=\"101.458\"><tspan>CMA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"151.448\" y=\"166.728\"><tspan>CAA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"104.259\" y=\"126.832\"><tspan>CBA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"78.3314\" y=\"119.849\"><tspan>CGA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"79.0005\" y=\"79.953\"><tspan>O1A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"66.9058\" y=\"152.762\"><tspan>O2A</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"335.681\" y=\"163.055\"><tspan>C1B</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"358.268\" y=\"143.64\"><tspan>C2B</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"374.377\" y=\"173.841\"><tspan>C3B</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"369.046\" y=\"212.664\"><tspan>C4B</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"347.225\" y=\"101.689\"><tspan>CMB</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"416.245\" y=\"166.293\"><tspan>CAB</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"443.635\" y=\"198.937\"><tspan>CBB</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"369.046\" y=\"285.997\"><tspan>C1C</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"373.908\" y=\"324.82\"><tspan>C2C</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"358.268\" y=\"355.021\"><tspan>C3C</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"336.15\" y=\"335.613\"><tspan>C4C</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"415.001\" y=\"331.06\"><tspan>CMC</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"347.742\" y=\"398.072\"><tspan>CAC</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"347.319\" y=\"424.308\"><tspan>CBC</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"230.471\" y=\"335.613\"><tspan>C1D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"208.357\" y=\"355.021\"><tspan>C2D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"193.79\" y=\"324.82\"><tspan>C3D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"197.573\" y=\"285.997\"><tspan>C4D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"183.879\" y=\"396.967\"><tspan>CMD</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"152.553\" y=\"331.499\"><tspan>CAD</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"start\" x=\"92.5824\" y=\"298.382\"><tspan>CBD</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"middle\" x=\"67.0719\" y=\"305.046\"><tspan>CGD</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"56.3654\" y=\"271.929\"><tspan>O1D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"67.908\" y=\"344.827\"><tspan>O2D</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"end\" x=\"250.054\" y=\"205.113\"><tspan>NA</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"start\" x=\"316.565\" y=\"205.113\"><tspan>NB</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"start\" x=\"316.096\" y=\"293.548\"><tspan>NC</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"end\" x=\"250.522\" y=\"293.548\"><tspan>ND</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:14px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"292.245\" y=\"249.331\"><tspan>FE</tspan></text>\n</svg>"
     },
     "metadata": {},
     "execution_count": 18
    }
   ],
   "source": [
    "# we can also use convenient functions to store the depiction as an svg image:\n",
    "component.export_2d_svg('HEM.svg')\n",
    "\n",
    "# including atom names\n",
    "component.export_2d_svg('HEM_with_names.svg', names=True)\n",
    "SVG('HEM_with_names.svg')"
   ]
  },
  {
   "source": [
    "We can also export the svg image and highlight atoms and bonds. Let's highlight the molecular scaffold we calculated earlier."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<IPython.core.display.SVG object>"
      ],
      "image/svg+xml": "<svg baseProfile=\"full\" height=\"500px\" version=\"1.1\" viewBox=\"0 0 500 500\" width=\"500px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:rdkit=\"http://www.rdkit.org/xml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<!-- END OF HEADER -->\n<rect height=\"500\" style=\"opacity:1.0;fill:#FFFFFF;stroke:none\" width=\"500\" x=\"0\" y=\"0\"> </rect>\n<path d=\"M 175.863,250.798 L 198.776,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 175.863,250.798 L 198.776,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 289.278,136.236 L 250.328,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 289.278,136.236 L 329.378,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 403.847,250.798 L 380.927,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 403.847,250.798 L 380.927,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 289.278,365.366 L 329.378,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 289.278,365.366 L 250.328,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 198.776,211.848 L 178.153,170.608\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 198.776,211.848 L 243.454,203.827\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 178.153,170.608 L 210.232,138.526\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 210.232,138.526 L 250.328,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 250.328,159.149 L 243.454,203.827\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 329.378,159.149 L 369.478,138.526\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 329.378,159.149 L 336.25,203.827\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 369.478,138.526 L 402.697,170.608\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 402.697,170.608 L 380.927,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 380.927,211.848 L 336.25,203.827\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 380.927,289.748 L 402.697,330.988\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 380.927,289.748 L 336.25,297.769\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 402.697,330.988 L 369.478,363.07\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 369.478,363.07 L 329.378,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 329.378,342.453 L 336.25,297.769\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 250.328,342.453 L 210.232,363.07\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 250.328,342.453 L 243.454,297.769\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 210.232,363.07 L 178.153,330.988\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 178.153,330.988 L 198.776,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 198.776,289.748 L 243.454,297.769\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 243.454,203.827 L 289.278,250.798\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 336.25,203.827 L 289.278,250.798\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 336.25,297.769 L 289.278,250.798\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path d=\"M 243.454,297.769 L 289.278,250.798\" style=\"fill:none;fill-rule:evenodd;stroke:#337F33;stroke-width:9px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"175.863\" cy=\"250.798\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"289.278\" cy=\"136.236\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"403.847\" cy=\"250.798\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"289.278\" cy=\"365.366\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"198.776\" cy=\"211.848\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"178.153\" cy=\"170.608\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"210.232\" cy=\"138.526\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"250.328\" cy=\"159.149\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"329.378\" cy=\"159.149\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"369.478\" cy=\"138.526\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"402.697\" cy=\"170.608\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"380.927\" cy=\"211.848\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"380.927\" cy=\"289.748\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"402.697\" cy=\"330.988\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"369.478\" cy=\"363.07\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"329.378\" cy=\"342.453\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"250.328\" cy=\"342.453\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"210.232\" cy=\"363.07\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"178.153\" cy=\"330.988\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"198.776\" cy=\"289.748\" rx=\"9.05321\" ry=\"9.05321\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"243.454\" cy=\"203.827\" rx=\"9.24759\" ry=\"10.6693\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"336.25\" cy=\"203.827\" rx=\"12.9876\" ry=\"11.7362\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"336.25\" cy=\"297.769\" rx=\"9.24759\" ry=\"10.6693\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"243.454\" cy=\"297.769\" rx=\"12.9876\" ry=\"11.7362\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<ellipse cx=\"289.278\" cy=\"250.798\" rx=\"20.6406\" ry=\"11.7362\" style=\"fill:#337F33;fill-rule:evenodd;stroke:#337F33;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-0\" d=\"M 175.863,250.798 L 198.776,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-1\" d=\"M 175.863,250.798 L 198.776,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-1\" d=\"M 187.103,252.05 L 203.143,279.315\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-2\" d=\"M 289.278,136.236 L 250.328,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-3\" d=\"M 289.278,136.236 L 329.378,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-3\" d=\"M 290.802,147.533 L 318.872,163.573\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-4\" d=\"M 403.847,250.798 L 380.927,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-5\" d=\"M 403.847,250.798 L 380.927,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-5\" d=\"M 392.606,252.049 L 376.563,279.314\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-6\" d=\"M 289.278,365.366 L 329.378,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-6\" d=\"M 290.802,354.069 L 318.872,338.029\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-7\" d=\"M 289.278,365.366 L 250.328,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-8\" d=\"M 198.776,211.848 L 178.153,170.608\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-8\" d=\"M 203.78,201.613 L 189.344,172.744\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-9\" d=\"M 198.776,211.848 L 217.846,208.424\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-9\" d=\"M 217.846,208.424 L 236.915,205.001\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-10\" d=\"M 178.153,170.608 L 210.232,138.526\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-11\" d=\"M 178.153,170.608 L 132.667,163.052\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-12\" d=\"M 210.232,138.526 L 250.328,159.149\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-12\" d=\"M 212.106,149.67 L 240.173,164.106\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-13\" d=\"M 210.232,138.526 L 203.133,93.7168\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-14\" d=\"M 250.328,159.149 L 247.472,177.716\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-14\" d=\"M 247.472,177.716 L 244.615,196.282\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-15\" d=\"M 132.667,163.052 L 116.764,120.671\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-16\" d=\"M 116.764,120.671 L 72.1098,113.253\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 76.3478,111.663 L 69.8118,94.2449\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 69.8118,94.2449 L 63.2757,76.8268\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 67.8717,114.844 L 61.3357,97.4255\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-17\" d=\"M 61.3357,97.4255 L 54.7996,80.0075\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-18\" d=\"M 72.1098,113.253 L 60.8362,126.963\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-18\" d=\"M 60.8362,126.963 L 49.5627,140.672\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-19\" d=\"M 329.378,159.149 L 369.478,138.526\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-20\" d=\"M 329.378,159.149 L 332.176,177.339\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-20\" d=\"M 332.176,177.339 L 334.973,195.528\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-21\" d=\"M 369.478,138.526 L 402.697,170.608\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-21\" d=\"M 368.172,149.85 L 391.425,172.307\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-22\" d=\"M 369.478,138.526 L 376.363,93.9626\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-23\" d=\"M 402.697,170.608 L 380.927,211.848\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-24\" d=\"M 402.697,170.608 L 448.177,162.59\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 380.927,211.848 L 363.18,208.662\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 363.18,208.662 L 345.433,205.476\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 377.203,201.981 L 364.78,199.751\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-25\" d=\"M 364.78,199.751 L 352.357,197.521\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-26\" d=\"M 444.71,165.499 L 473.805,200.176\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-26\" d=\"M 451.645,159.68 L 480.74,194.357\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-27\" d=\"M 380.927,289.748 L 402.697,330.988\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-28\" d=\"M 380.927,289.748 L 361.858,293.171\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-28\" d=\"M 361.858,293.171 L 342.789,296.595\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-29\" d=\"M 402.697,330.988 L 369.478,363.07\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-29\" d=\"M 391.425,329.288 L 368.172,351.745\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-30\" d=\"M 402.697,330.988 L 448.857,337.616\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-31\" d=\"M 369.478,363.07 L 329.378,342.453\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-32\" d=\"M 369.478,363.07 L 375.907,408.802\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-33\" d=\"M 329.378,342.453 L 332.234,323.883\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-33\" d=\"M 332.234,323.883 L 335.089,305.313\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-34\" d=\"M 373.12,405.235 L 337.45,433.105\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-34\" d=\"M 378.694,412.369 L 343.024,440.238\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-35\" d=\"M 250.328,342.453 L 210.232,363.07\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 250.328,342.453 L 247.53,324.26\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 247.53,324.26 L 244.731,306.068\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 240.541,338.371 L 238.582,325.637\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-36\" d=\"M 238.582,325.637 L 236.623,312.902\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-37\" d=\"M 210.232,363.07 L 178.153,330.988\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-37\" d=\"M 211.822,351.856 L 189.367,329.399\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-38\" d=\"M 210.232,363.07 L 203.343,407.627\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-39\" d=\"M 178.153,330.988 L 198.776,289.748\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-40\" d=\"M 178.153,330.988 L 133.343,338.083\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-41\" d=\"M 198.776,289.748 L 216.523,292.934\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-41\" d=\"M 216.523,292.934 L 234.27,296.12\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-42\" d=\"M 133.343,338.083 L 104.858,302.904\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-43\" d=\"M 104.858,302.904 L 60.1491,309.983\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 63.6671,307.134 L 52.4788,293.316\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 52.4788,293.316 L 41.2906,279.499\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 56.6312,312.831 L 45.4429,299.013\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-44\" d=\"M 45.4429,299.013 L 34.2547,285.196\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-45\" d=\"M 60.1491,309.983 L 53.4854,327.34\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-45\" d=\"M 53.4854,327.34 L 46.8216,344.697\" style=\"fill:none;fill-rule:evenodd;stroke:#FF0000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-46\" d=\"M 249.993,210.529 L 265.588,226.514\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-46\" d=\"M 265.588,226.514 L 281.182,242.499\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-47\" d=\"M 327.951,212.126 L 312.764,227.312\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-47\" d=\"M 312.764,227.312 L 297.577,242.499\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-48\" d=\"M 329.71,291.23 L 313.644,275.163\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-48\" d=\"M 313.644,275.163 L 297.577,259.097\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-49\" d=\"M 251.55,289.47 L 266.366,274.283\" style=\"fill:none;fill-rule:evenodd;stroke:#0000FF;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<path class=\"bond-49\" d=\"M 266.366,274.283 L 281.182,259.097\" style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"/>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"61.744\" y=\"73.1361\"><tspan>O</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"48.8961\" y=\"150.479\"><tspan>HO</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"37.2013\" y=\"277.066\"><tspan>O</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#FF0000\" text-anchor=\"end\" x=\"49.4626\" y=\"354.505\"><tspan>HO</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"end\" x=\"248.484\" y=\"206.09\"><tspan>N</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"start\" x=\"328.726\" y=\"206.316\"><tspan>N</tspan><tspan style=\"baseline-shift:super;font-size:11.25px;\">+</tspan><tspan/></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"start\" x=\"331.219\" y=\"300.032\"><tspan>N</tspan></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#0000FF\" text-anchor=\"end\" x=\"250.978\" y=\"300.259\"><tspan>N</tspan><tspan style=\"baseline-shift:super;font-size:11.25px;\">+</tspan><tspan/></text>\n<text dominant-baseline=\"central\" style=\"font-size:15px;font-style:normal;font-weight:normal;fill-opacity:1;stroke:none;font-family:sans-serif;fill:#000000\" text-anchor=\"end\" x=\"302.214\" y=\"253.288\"><tspan>Fe</tspan><tspan style=\"baseline-shift:super;font-size:11.25px;\">2-</tspan><tspan/></text>\n</svg>"
     },
     "metadata": {},
     "execution_count": 19
    }
   ],
   "source": [
    "# retrieve list of atom names that are part of the scaffold \n",
    "# and color them in green. RGB: (0.2, 0.5, 0.2). \n",
    "# Scale 0-1 is used instead of the common 0-255\n",
    "scaffold = component.scaffolds[0]\n",
    "atom_names = scaffold.mappings[0]\n",
    "atom_color_mapping = {x: (0.2, 0.5, 0.2) for x in atom_names}\n",
    "\n",
    "# find out all the bonds that are formed among the scaffold atoms and color them in green as well.\n",
    "bond_color_highlight = {}\n",
    "bonds = component.mol_no_h.GetBonds()\n",
    "for bond in bonds:\n",
    "    begin = bond.GetBeginAtom().GetProp('name')\n",
    "    end = bond.GetEndAtom().GetProp('name')\n",
    "\n",
    "    if begin in atom_names and end in atom_names:\n",
    "        bond_color_highlight[(begin, end)] = ((0.2, 0.5, 0.2))\n",
    "\n",
    "# draw the final image\n",
    "component.export_2d_svg('HEM_with_scaffold.svg', \n",
    "                        atom_highlight=atom_color_mapping,\n",
    "                        bond_highlight=bond_color_highlight)\n",
    "SVG('HEM_with_scaffold.svg')"
   ]
  },
  {
   "source": [
    "The exactly same operations can be done by using input data from wwPDB BIRD dictionary. For the following example we are going to use [Vancomycin](https://en.wikipedia.org/wiki/Vancomycin), an antibiotic used for bacterial infection treatment. Just download `PRDCC_000204` wwPDB BIRD entry from the [FTP directory](ftp://ftp.wwpdb.org/pub/pdb/data/bird/prd/)."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7f86f94b78f0>"
      ],
      "image/png": "\n"
     },
     "metadata": {},
     "execution_count": 20
    }
   ],
   "source": [
    "c = ccd_reader.read_pdb_cif_file('PRDCC_000204.cif').component\n",
    "c.compute_2d(d).mol"
   ]
  },
  {
   "source": [
    "## Structure writing\n",
    "\n",
    "Structure writing can be done using `ccd_writer.py` module located in the `pdbeccdutils.core` module. This module exposes [write_molecule()](https://pdbeurope.github.io/ccdutils/pdbeccdutils.core.html#pdbeccdutils.core.ccd_writer.write_molecule) method that enables writing out conformers of chemical components in a number of different formats. See example below:"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "from pdbeccdutils.core import ccd_writer\n",
    "from pdbeccdutils.core.models import ConformerType\n",
    "\n",
    "# write out ideal conformer in the PDB format\n",
    "ccd_writer.write_molecule('HEM_ideal.pdb', component, conf_type=ConformerType.Ideal)\n",
    "\n",
    "# write out model conformer in the SDF format without hydrogens\n",
    "ccd_writer.write_molecule('HEM_model_no_h.sdf',\n",
    "                          component, remove_hs=True, conf_type=ConformerType.Model)\n",
    "\n",
    "# write out metadata information in CML format\n",
    "ccd_writer.write_molecule('HEM_in_cif.cml', component)"
   ],
   "cell_type": "code",
   "metadata": {},
   "execution_count": 21,
   "outputs": []
  },
  {
   "source": [
    "## Parity method\n",
    "\n",
    "There is a number of chemical similarity methods that can estimate a degree of similarity between the two molecules. pdbeccdutils implements one of such methods that takes advantage of maximum common sub-structures. This method is called PARITY and was developed by Jon Tyzack while working at EBI. You can read the description of the method in the [published paper](https://doi.org/10.1016/j.str.2018.02.009).\n",
    "\n",
    "In the following example we are going to examine molecular similarity of two heme variants [HEME A](http://pdbe.org/chem/HEA) and [HEME D](http://pdbe.org/chem/DHE)"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# download the structures first\n",
    "hem_a_path = download_component('HEA')\n",
    "hem_d_path = download_component('DHE')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "ParityResult(mapping={0: 0, 5: 5, 6: 6, 1: 1, 35: 42, 31: 38, 32: 39, 4: 4, 27: 37, 23: 27, 24: 28, 3: 3, 21: 26, 17: 16, 18: 17, 2: 2, 9: 9, 8: 8, 7: 7, 12: 11, 13: 12, 14: 13, 15: 14, 16: 15, 10: 10, 19: 18, 20: 20, 42: 22, 44: 23, 45: 25, 22: 19, 25: 29, 26: 31, 29: 33, 30: 34, 28: 30, 33: 40, 34: 41, 37: 44, 38: 45, 39: 46, 40: 47, 41: 48, 36: 43}, similarity_score=0.6029411764705882)"
      ]
     },
     "metadata": {},
     "execution_count": 23
    }
   ],
   "source": [
    "from pdbeccdutils.computations.parity_method import compare_molecules\n",
    "\n",
    "hem_a = ccd_reader.read_pdb_cif_file(hem_a_path).component\n",
    "hem_d = ccd_reader.read_pdb_cif_file(hem_d_path).component\n",
    "\n",
    "result = compare_molecules(hem_a.mol_no_h, hem_d.mol_no_h)\n",
    "result\n"
   ]
  },
  {
   "source": [
    "`ParityResult.mapping` contains left to right atom equivalency."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "Similarity between heme A and heme D is: 0.603.\n"
     ]
    }
   ],
   "source": [
    "print(f'Similarity between heme A and heme D is: {result.similarity_score:.3f}.')"
   ]
  },
  {
   "source": [
    "## Scripts\n",
    "\n",
    "pdbeccdutils package implements also [scripts](https://pdbeurope.github.io/ccdutils/guide/pipelines.html) that we internally use for chemistry related processes in the PDBe. Directly from the package you can try out the PDBeChem that generates content of the [FTP area](http://ftp.ebi.ac.uk/pub/databases/msd/pdbechem_v2) and provides all the data that are consumed by the [service](http://pdbe.org/chem)."
   ],
   "cell_type": "markdown",
   "metadata": {}
  }
 ]
}