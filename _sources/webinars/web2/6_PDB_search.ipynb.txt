{
 "cells": [
  {
   "source": [
    "# PDB search\n",
    "\n",
    "This interactive Python notebook will guide you through various ways of programmatically accessing Protein Data Bank in Europe (PDBe) data using REST API\n",
    "\n",
    "The REST API is a programmatic way to obtain information from the PDB and EMDB. You can access details about:\n",
    "\n",
    "* sample\n",
    "* experiment\n",
    "* models\n",
    "* compounds\n",
    "* cross-references\n",
    "* publications\n",
    "* quality\n",
    "* assemblies\n",
    "and more...\n",
    "For more information, visit https://www.ebi.ac.uk/pdbe/pdbe-rest-api\n",
    "\n",
    "This notebook is a part of the training material series, and focuses on getting information from the PDBe search API. Retrieve this material and many more from [GitHub](https://github.com/PDBeurope/pdbe-api-training)\n",
    "\n",
    "## 1) Making imports and setting variables\n",
    "First, we import some packages that we will use, and set some variables.\n",
    "\n",
    "Note: Full list of valid URLs is available from https://www.ebi.ac.uk/pdbe/api/doc/"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests # used for getting data from a URL\n",
    "from pprint import pprint # pretty print\n",
    "import pandas as pd # used for turning results into mini databases\n",
    "from solrq import Q # used to turn result queries into the right format\n",
    "\n",
    "search_url = \"https://www.ebi.ac.uk/pdbe/search/pdb/select?\" # the rest of the URL used for PDBe's search API."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2) a function to get data from the search API\n",
    "Let's start with defining a function that can be used to GET data from the PDBe search API.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_request(search_dict, number_of_rows=10):\n",
    "    \"\"\"\n",
    "    makes a get request to the PDBe API\n",
    "    :param dict search_dict: the terms used to search\n",
    "    :param number_of_rows: number or rows to return - limited to 10\n",
    "    :return dict: response JSON\n",
    "    \"\"\"\n",
    "    if 'rows' not in search_dict:\n",
    "        search_dict['rows'] = number_of_rows\n",
    "    search_dict['wt'] = 'json'\n",
    "    # pprint(search_dict)\n",
    "    response = requests.post(search_url, data=search_dict)\n",
    "\n",
    "    if response.status_code == 200:\n",
    "        return response.json()\n",
    "    else:\n",
    "        print(\"[No data retrieved - %s] %s\" % (response.status_code, response.text))\n",
    "\n",
    "    return {}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3) formatting the search terms \n",
    "This will allow us to use human readable search terms and this function will make a URL that the search API can handle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def format_search_terms(search_terms, filter_terms=None):\n",
    "    ret = {'q': str(search_terms)}\n",
    "    if filter_terms:\n",
    "        fl = '{}'.format(','.join(filter_terms))\n",
    "        ret['fl'] = fl\n",
    "    return ret"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4) Getting useful data out of the search\n",
    "\n",
    "This function will run the search and will return a list of the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def run_search(search_terms, filter_terms=None, number_of_rows=100):\n",
    "    search_term = format_search_terms(search_terms, filter_terms)\n",
    "\n",
    "    response = make_request(search_term, number_of_rows)\n",
    "    results = response.get('response', {}).get('docs', [])\n",
    "    print('Number of results: {}'.format(len(results)))\n",
    "    return results\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5) running a search\n",
    "\n",
    "Now we are ready to actually run a search against the PDB API for entries containing human Dihydrofolate reductase in the PDB. This will return a list of results - only 10 to start with.\n",
    "\n",
    "A list of search terms is available at:\n",
    "https://www.ebi.ac.uk/pdbe/api/doc/search.html\n",
    "\n",
    "This will return details of human Dihydrofolate reductase's in the PDB\n",
    "\n",
    "We are going to use the Python package \"solrq\" to make sure we get the search in the right format.\n",
    "\n",
    "Q(molecule_name=\"Dihydrofolate reductase\")\n",
    "\n",
    "Here we are searching for molecules named Dihydrofolate reductase.\n",
    "If we search for two terms i.e. molecule_name and organism_scientific_name then we will get molecules that match both search terms.\n",
    "\n",
    "We will return the number of results for two searches.\n",
    "\n",
    "The first one will hit the limit of 100. There are more than 100 Dihydrofolate reductase structures. \n",
    "We have to add the argument \"number_of_rows\" to a higher number, say 1000, to find all the examples. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1st search\n",
      "Number of results: 100\n"
     ]
    }
   ],
   "source": [
    "print('1st search')\n",
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\")\n",
    "\n",
    "first_results = run_search(search_terms)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results for molecule_name:Dihydrofolate\\ reductase: 405\n",
      "Number of results: 405\n"
     ]
    }
   ],
   "source": [
    "print('1st search - more rows')\n",
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\")\n",
    "\n",
    "first_results_more_rows = run_search(search_terms, number_of_rows=1000)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will add organism_name of Human to the query to limit the results to only return those that are structures of Human Dihydrofolate reductase."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2nd search\n",
      "Number of results: 79\n"
     ]
    }
   ],
   "source": [
    "print('2nd search')\n",
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\",organism_name=\"Human\")\n",
    "second_results = run_search(search_terms)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How did we know which search terms to use?\n",
    "\n",
    "We will then look at the last result.\n",
    "We will print the data we have for the first result.\n",
    "\n",
    "This will be the first item of the list \"second_results\"\n",
    "i.e. second_results[0]\n",
    "\n",
    "We are using \"pprint\" (pretty print) rather than \"print\" to make the result easier to read.\n",
    "\n",
    "All of the \"keys\" on the left side of the results can be used as a search term."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'_version_': 1675721334876798976,\n",
      " 'abstracttext_unassigned': ['The crystal structures of six human '\n",
      "                             'dihydrofolate reductase (hDHFR) ternary '\n",
      "                             'complexes with NADPH and a series of mixed E/Z '\n",
      "                             'isomers of 5-substituted '\n",
      "                             '5-[2-(2-methoxyphenyl)-prop-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamines '\n",
      "                             'substituted at the C9 position with propyl, '\n",
      "                             'isopropyl, cyclopropyl, butyl, isobutyl and '\n",
      "                             'sec-butyl (E2-E7, Z3) were determined and the '\n",
      "                             'results were compared with the resolved E and Z '\n",
      "                             'isomers of the C9-methyl parent compound. The '\n",
      "                             'configuration of all of the inhibitors, save '\n",
      "                             'one, was observed as the E isomer, in which the '\n",
      "                             'binding of the furopyrimidine ring is flipped '\n",
      "                             'such that the 4-amino group binds in the 4-oxo '\n",
      "                             'site of folate. The Z3\\xa0isomer of the '\n",
      "                             'C9-isopropyl analog has the normal '\n",
      "                             '2,4-diaminopyrimidine ring binding geometry, '\n",
      "                             'with the furo oxygen near Glu30 and the 4-amino '\n",
      "                             'group interacting near the cofactor nicotinamide '\n",
      "                             'ring. Electron-density maps for these structures '\n",
      "                             'revealed the binding of only one isomer to '\n",
      "                             'hDHFR, despite the fact that chiral mixtures '\n",
      "                             '(E:Z ratios of 2:1, 3:1 and 3:2) of the '\n",
      "                             'inhibitors were incubated with hDHFR prior to '\n",
      "                             'crystallization. Superposition of the hDHFR '\n",
      "                             'complexes with E2 and Z3 shows that the '\n",
      "                             \"2'-methoxyphenyl ring of E2 is perpendicular to \"\n",
      "                             'that of Z3. The most potent inhibitor in this '\n",
      "                             'series is the isopropyl analog Z3 and the least '\n",
      "                             'potent is the isobutyl analog E6, consistent '\n",
      "                             'with data that show that the Z isomer makes the '\n",
      "                             'most favorable interactions with the active-site '\n",
      "                             'residues. The isobutyl moiety of E6 is observed '\n",
      "                             'in two orientations and the resultant steric '\n",
      "                             'crowding of the E6 analog is consistent with its '\n",
      "                             'weaker activity. The alternative binding modes '\n",
      "                             'observed for the furopyrimidine ring in these '\n",
      "                             'E/Z isomers suggest that new templates can be '\n",
      "                             'designed to probe these binding regions of the '\n",
      "                             'DHFR active site.'],\n",
      " 'all_assembly_composition': ['protein structure'],\n",
      " 'all_assembly_form': ['homo'],\n",
      " 'all_assembly_id': ['1'],\n",
      " 'all_assembly_mol_wt': [22.547],\n",
      " 'all_assembly_type': ['monomer'],\n",
      " 'all_authors': ['Cody V', 'Gangjee A', 'Li W', 'Pace J', 'Piraino J'],\n",
      " 'all_compound_names': ['D2F : '\n",
      "                        '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                        'NDP : NADPH DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE '\n",
      "                        'PHOSPHATE',\n",
      "                        'SO4 : SULFATE ION',\n",
      "                        'NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                        'phosphate',\n",
      "                        'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                        'phosphate',\n",
      "                        'NDP : TPNH',\n",
      "                        'SO4 : Sulfate',\n",
      "                        'SO4 : Sulfate dianion',\n",
      "                        'SO4 : Sulfate(2-)',\n",
      "                        'SO4 : Sulfuric acid ion(2-)',\n",
      "                        'D2F : '\n",
      "                        '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                        'SO4 : sulfate',\n",
      "                        'D2F : '\n",
      "                        '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                        'NDP : '\n",
      "                        '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                        '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                        'hydrogen phosphate'],\n",
      " 'all_enzyme_names': ['Oxidoreductases',\n",
      "                      'Acting on the CH-NH group of donors',\n",
      "                      'With NAD(+) or NADP(+) as acceptor',\n",
      "                      'Dihydrofolate reductase',\n",
      "                      '1.5.1.3 : Dihydrofolate reductase',\n",
      "                      '5,6,7,8-tetrahydrofolate:NADP(+) oxidoreductase'],\n",
      " 'all_go_terms': ['cytoplasm',\n",
      "                  'mitochondrion',\n",
      "                  'cytosol',\n",
      "                  'folic acid binding',\n",
      "                  'oxidoreductase activity',\n",
      "                  'NADPH binding',\n",
      "                  'sequence-specific mRNA binding',\n",
      "                  'RNA binding',\n",
      "                  'mRNA binding',\n",
      "                  'NADP binding',\n",
      "                  'methotrexate binding',\n",
      "                  'dihydrofolate reductase activity',\n",
      "                  'translation repressor activity, mRNA regulatory element '\n",
      "                  'binding',\n",
      "                  'drug binding',\n",
      "                  'one-carbon metabolic process',\n",
      "                  'negative regulation of translation',\n",
      "                  'folic acid metabolic process',\n",
      "                  'response to methotrexate',\n",
      "                  'regulation of removal of superoxide radicals',\n",
      "                  'tetrahydrobiopterin biosynthetic process',\n",
      "                  'tetrahydrofolate metabolic process',\n",
      "                  'tetrahydrofolate biosynthetic process',\n",
      "                  'oxidation-reduction process',\n",
      "                  'regulation of transcription involved in G1/S transition of '\n",
      "                  'mitotic cell cycle',\n",
      "                  'positive regulation of nitric-oxide synthase activity',\n",
      "                  'axon regeneration',\n",
      "                  'dihydrofolate metabolic process'],\n",
      " 'all_molecule_names': ['Dihydrofolate reductase', 'Dihydrofolate reductase'],\n",
      " 'all_num_interacting_entity_id': [0],\n",
      " 'all_sequence_family': ['IPR001796 : Dihydrofolate reductase domain',\n",
      "                         'IPR024072 : Dihydrofolate reductase-like domain '\n",
      "                         'superfamily',\n",
      "                         'PF00186 : DHFR_1',\n",
      "                         'CL0387 : DHFred'],\n",
      " 'all_structure_family': ['3-Layer(aba) Sandwich',\n",
      "                          'Alpha Beta',\n",
      "                          '3.40.430.10',\n",
      "                          'Dihydrofolate Reductase, subunit A',\n",
      "                          'Dihydrofolate Reductase, subunit A'],\n",
      " 'assembly_composition': ['protein structure'],\n",
      " 'assembly_form': ['homo'],\n",
      " 'assembly_id': ['1'],\n",
      " 'assembly_mol_wt': 22.547,\n",
      " 'assembly_num_component': [1],\n",
      " 'assembly_type': ['monomer'],\n",
      " 'beam_source_name': ['Rotating anode'],\n",
      " 'biological_cell_component': ['cytoplasm', 'mitochondrion', 'cytosol'],\n",
      " 'biological_function': ['folic acid binding',\n",
      "                         'oxidoreductase activity',\n",
      "                         'NADPH binding',\n",
      "                         'sequence-specific mRNA binding',\n",
      "                         'RNA binding',\n",
      "                         'mRNA binding',\n",
      "                         'NADP binding',\n",
      "                         'methotrexate binding',\n",
      "                         'dihydrofolate reductase activity',\n",
      "                         'translation repressor activity, mRNA regulatory '\n",
      "                         'element binding',\n",
      "                         'drug binding'],\n",
      " 'biological_process': ['one-carbon metabolic process',\n",
      "                        'negative regulation of translation',\n",
      "                        'folic acid metabolic process',\n",
      "                        'response to methotrexate',\n",
      "                        'regulation of removal of superoxide radicals',\n",
      "                        'tetrahydrobiopterin biosynthetic process',\n",
      "                        'tetrahydrofolate metabolic process',\n",
      "                        'tetrahydrofolate biosynthetic process',\n",
      "                        'oxidation-reduction process',\n",
      "                        'regulation of transcription involved in G1/S '\n",
      "                        'transition of mitotic cell cycle',\n",
      "                        'positive regulation of nitric-oxide synthase activity',\n",
      "                        'axon regeneration',\n",
      "                        'dihydrofolate metabolic process'],\n",
      " 'bound_compound_id': ['D2F', 'NDP', 'SO4'],\n",
      " 'bound_compound_name': ['D2F : '\n",
      "                         '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                         'NDP : NADPH '\n",
      "                         'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE PHOSPHATE',\n",
      "                         'SO4 : SULFATE ION'],\n",
      " 'bound_compound_synonym': ['NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                            'phosphate',\n",
      "                            'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                            'phosphate',\n",
      "                            'NDP : TPNH',\n",
      "                            'SO4 : Sulfate',\n",
      "                            'SO4 : Sulfate dianion',\n",
      "                            'SO4 : Sulfate(2-)',\n",
      "                            'SO4 : Sulfuric acid ion(2-)'],\n",
      " 'bound_compound_systematic_name': ['D2F : '\n",
      "                                    '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                    'SO4 : sulfate',\n",
      "                                    'D2F : '\n",
      "                                    '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                    'NDP : '\n",
      "                                    '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                                    '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                                    'hydrogen phosphate'],\n",
      " 'bound_compound_weight': [338.404, 745.421, 96.063],\n",
      " 'cath_architecture': ['3-Layer(aba) Sandwich'],\n",
      " 'cath_class': ['Alpha Beta'],\n",
      " 'cath_code': ['3.40.430.10'],\n",
      " 'cath_homologous_superfamily': ['Dihydrofolate Reductase, subunit A'],\n",
      " 'cath_topology': ['Dihydrofolate Reductase, subunit A'],\n",
      " 'cell_a': 83.998,\n",
      " 'cell_alpha': 90.0,\n",
      " 'cell_b': 83.998,\n",
      " 'cell_beta': 90.0,\n",
      " 'cell_c': 78.273,\n",
      " 'cell_gamma': 120.0,\n",
      " 'chain_id': 'A',\n",
      " 'citation_authors': ['Cody V', 'Piraino J', 'Pace J', 'Li W', 'Gangjee A'],\n",
      " 'citation_doi': '10.1107/S0907444910035808',\n",
      " 'citation_title': 'Preferential selection of isomer binding from chiral '\n",
      "                   'mixtures: alternate binding modes observed for the E and Z '\n",
      "                   'isomers of a series of 5-substituted '\n",
      "                   '2,4-diaminofuro[2,3-d]pyrimidines as ternary complexes '\n",
      "                   'with NADPH and human dihydrofolate reductase.',\n",
      " 'citation_year': 2010,\n",
      " 'cofactor_class': ['Nicotinamide-adenine dinucleotide'],\n",
      " 'cofactor_id': ['NDP'],\n",
      " 'compound_id': ['D2F', 'NDP', 'SO4'],\n",
      " 'compound_name': ['D2F : '\n",
      "                   '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                   'NDP : NADPH DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE '\n",
      "                   'PHOSPHATE',\n",
      "                   'SO4 : SULFATE ION'],\n",
      " 'compound_synonym': ['NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                      'phosphate',\n",
      "                      'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                      'phosphate',\n",
      "                      'NDP : TPNH',\n",
      "                      'SO4 : Sulfate',\n",
      "                      'SO4 : Sulfate dianion',\n",
      "                      'SO4 : Sulfate(2-)',\n",
      "                      'SO4 : Sulfuric acid ion(2-)'],\n",
      " 'compound_systematic_name': ['D2F : '\n",
      "                              '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                              'SO4 : sulfate',\n",
      "                              'D2F : '\n",
      "                              '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                              'NDP : '\n",
      "                              '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                              '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                              'hydrogen phosphate'],\n",
      " 'compound_weight': [338.404, 745.421, 96.063],\n",
      " 'crystallisation_cond': ['100 mM K2PO4, 60% saturated ammonium sulfate, 3% '\n",
      "                          'v/v ethanol, pH 6.9, VAPOR DIFFUSION, HANGING DROP, '\n",
      "                          'temperature 298K'],\n",
      " 'crystallisation_method': 'VAPOR DIFFUSION, HANGING DROP',\n",
      " 'crystallisation_ph': [6.9, 6.9],\n",
      " 'crystallisation_reservoir': ['POTASSIUM PHOSPHATE',\n",
      "                               'AMMONIUM SULFATE',\n",
      "                               'ETHANOL'],\n",
      " 'crystallisation_temperature': 298.0,\n",
      " 'data_collection_date': ['2008-12-06T00:00:00Z'],\n",
      " 'data_collection_year': [2008],\n",
      " 'data_quality': 33.46,\n",
      " 'data_reduction_software': ['MOSFLM'],\n",
      " 'data_scaling_software': ['SCALA'],\n",
      " 'deposition_date': '2010-07-14T01:00:00Z',\n",
      " 'deposition_site': 'RCSB',\n",
      " 'deposition_year': 2010,\n",
      " 'detector': ['Image plate'],\n",
      " 'detector_type': ['RIGAKU RAXIS IV'],\n",
      " 'diffraction_protocol': ['Single wavelength'],\n",
      " 'diffraction_source_type': ['RIGAKU RU300'],\n",
      " 'diffraction_wavelengths': [1.54198],\n",
      " 'ec_hierarchy_name': ['Oxidoreductases',\n",
      "                       'Acting on the CH-NH group of donors',\n",
      "                       'With NAD(+) or NADP(+) as acceptor',\n",
      "                       'Dihydrofolate reductase'],\n",
      " 'ec_number': ['1.5.1.3'],\n",
      " 'entity_id': 1,\n",
      " 'entity_weight': 21349.525,\n",
      " 'entry_author_list': ['Cody V'],\n",
      " 'entry_authors': ['Cody V'],\n",
      " 'entry_entity': '3nxv_1',\n",
      " 'entry_lig_entity': ['3nxv_SO4_4', '3nxv_NDP_3', '3nxv_D2F_2'],\n",
      " 'entry_organism_scientific_name': ['Homo sapiens|9606'],\n",
      " 'enzyme_name': ['Dihydrofolate reductase'],\n",
      " 'enzyme_num_name': ['1.5.1.3 : Dihydrofolate reductase'],\n",
      " 'enzyme_systematic_name': ['5,6,7,8-tetrahydrofolate:NADP(+) oxidoreductase'],\n",
      " 'experiment_data_available': ['y'],\n",
      " 'experimental_method': ['X-ray diffraction'],\n",
      " 'expression_host_sci_name': ['Escherichia coli'],\n",
      " 'expression_host_synonyms': ['Bacterium Coli',\n",
      "                              'Enterococcus Coli',\n",
      "                              'Bacterium 10a',\n",
      "                              'Escherichia Coli',\n",
      "                              'Escherichia Sp. 3_2_53faa',\n",
      "                              'Escherichia/Shigella Coli',\n",
      "                              'Ecolx',\n",
      "                              'Bacterium E3',\n",
      "                              'Bacterium Coli Commune',\n",
      "                              'E. Coli',\n",
      "                              'Bacillus Coli',\n",
      "                              'Escherichia Sp. Mar',\n",
      "                              'Escherichia coli',\n",
      "                              'Escherichia',\n",
      "                              'Enterobacteriaceae',\n",
      "                              'Enterobacterales',\n",
      "                              'Gammaproteobacteria',\n",
      "                              'Proteobacteria',\n",
      "                              'Bacteria'],\n",
      " 'expression_host_tax_id': [562],\n",
      " 'expression_organism_name': ['Escherichia coli',\n",
      "                              'Bacterium Coli',\n",
      "                              'Enterococcus Coli',\n",
      "                              'Bacterium 10a',\n",
      "                              'Escherichia Coli',\n",
      "                              'Escherichia Sp. 3_2_53faa',\n",
      "                              'Escherichia/Shigella Coli',\n",
      "                              'Ecolx',\n",
      "                              'Bacterium E3',\n",
      "                              'Bacterium Coli Commune',\n",
      "                              'E. Coli',\n",
      "                              'Bacillus Coli',\n",
      "                              'Escherichia Sp. Mar',\n",
      "                              'Escherichia coli',\n",
      "                              'Escherichia',\n",
      "                              'Enterobacteriaceae',\n",
      "                              'Enterobacterales',\n",
      "                              'Gammaproteobacteria',\n",
      "                              'Proteobacteria',\n",
      "                              'Bacteria'],\n",
      " 'gene_name': ['DHFR'],\n",
      " 'genus': ['Homo'],\n",
      " 'go_id': ['GO:0006730',\n",
      "           'GO:0017148',\n",
      "           'GO:0046655',\n",
      "           'GO:0031427',\n",
      "           'GO:2000121',\n",
      "           'GO:0006729',\n",
      "           'GO:0046653',\n",
      "           'GO:0046654',\n",
      "           'GO:0055114',\n",
      "           'GO:0000083',\n",
      "           'GO:0051000',\n",
      "           'GO:0031103',\n",
      "           'GO:0046452',\n",
      "           'GO:0005542',\n",
      "           'GO:0016491',\n",
      "           'GO:0070402',\n",
      "           'GO:1990825',\n",
      "           'GO:0003723',\n",
      "           'GO:0003729',\n",
      "           'GO:0050661',\n",
      "           'GO:0051870',\n",
      "           'GO:0004146',\n",
      "           'GO:0000900',\n",
      "           'GO:0008144',\n",
      "           'GO:0005737',\n",
      "           'GO:0005739',\n",
      "           'GO:0005829'],\n",
      " 'go_mapping': ['GO:0006730 : one-carbon metabolic process',\n",
      "                'GO:0017148 : negative regulation of translation',\n",
      "                'GO:0046655 : folic acid metabolic process',\n",
      "                'GO:0031427 : response to methotrexate',\n",
      "                'GO:2000121 : regulation of removal of superoxide radicals',\n",
      "                'GO:0006729 : tetrahydrobiopterin biosynthetic process',\n",
      "                'GO:0046653 : tetrahydrofolate metabolic process',\n",
      "                'GO:0046654 : tetrahydrofolate biosynthetic process',\n",
      "                'GO:0055114 : oxidation-reduction process',\n",
      "                'GO:0000083 : regulation of transcription involved in G1/S '\n",
      "                'transition of mitotic cell cycle',\n",
      "                'GO:0051000 : positive regulation of nitric-oxide synthase '\n",
      "                'activity',\n",
      "                'GO:0031103 : axon regeneration',\n",
      "                'GO:0046452 : dihydrofolate metabolic process',\n",
      "                'GO:0005542 : folic acid binding',\n",
      "                'GO:0016491 : oxidoreductase activity',\n",
      "                'GO:0070402 : NADPH binding',\n",
      "                'GO:1990825 : sequence-specific mRNA binding',\n",
      "                'GO:0003723 : RNA binding',\n",
      "                'GO:0003729 : mRNA binding',\n",
      "                'GO:0050661 : NADP binding',\n",
      "                'GO:0051870 : methotrexate binding',\n",
      "                'GO:0004146 : dihydrofolate reductase activity',\n",
      "                'GO:0000900 : translation repressor activity, mRNA regulatory '\n",
      "                'element binding',\n",
      "                'GO:0008144 : drug binding',\n",
      "                'GO:0005737 : cytoplasm',\n",
      "                'GO:0005739 : mitochondrion',\n",
      "                'GO:0005829 : cytosol'],\n",
      " 'has_bound_molecule': 'Y',\n",
      " 'has_carb_polymer': 'N',\n",
      " 'has_cofactor': ['Y'],\n",
      " 'has_modified_residues': 'N',\n",
      " 'has_reactant': ['Y'],\n",
      " 'homologus_pdb_entity_id': ['4qhv_1',\n",
      "                             '6dav_1',\n",
      "                             '1dlr_1',\n",
      "                             '4kak_1',\n",
      "                             '4keb_1',\n",
      "                             '5hqy_1',\n",
      "                             '5hqz_1',\n",
      "                             '1u72_1',\n",
      "                             '2w3b_1',\n",
      "                             '5hsr_1',\n",
      "                             '5ht4_1',\n",
      "                             '3nu0_1',\n",
      "                             '3nxo_1',\n",
      "                             '3nxt_1',\n",
      "                             '3nxv_1',\n",
      "                             '2c2s_1',\n",
      "                             '3nxr_1',\n",
      "                             '1hfr_1',\n",
      "                             '1s3v_1',\n",
      "                             '1s3w_1',\n",
      "                             '1u71_1',\n",
      "                             '1yho_1',\n",
      "                             '2w3a_1',\n",
      "                             '3nxy_1',\n",
      "                             '3nzd_1',\n",
      "                             '3s7a_1',\n",
      "                             '5hve_1',\n",
      "                             '1dls_1',\n",
      "                             '1drf_1',\n",
      "                             '1mvs_1',\n",
      "                             '2c2t_1',\n",
      "                             '4m6j_1',\n",
      "                             '1kms_1',\n",
      "                             '1pd9_1',\n",
      "                             '3ghc_1',\n",
      "                             '3ghw_1',\n",
      "                             '3ntz_1',\n",
      "                             '3nxx_1',\n",
      "                             '1pdb_1',\n",
      "                             '3f8y_1',\n",
      "                             '3gi2_1',\n",
      "                             '6a7e_1',\n",
      "                             '1pd8_1',\n",
      "                             '4ddr_1',\n",
      "                             '4m6k_1',\n",
      "                             '3f8z_1',\n",
      "                             '3f91_1',\n",
      "                             '3fs6_1',\n",
      "                             '4m6l_1',\n",
      "                             '4qjc_1',\n",
      "                             '5hsu_1',\n",
      "                             '1boz_1',\n",
      "                             '3n0h_1',\n",
      "                             '4kfj_1',\n",
      "                             '1kmv_1',\n",
      "                             '1mvt_1',\n",
      "                             '3oaf_1',\n",
      "                             '4kd7_1',\n",
      "                             '5hpb_1',\n",
      "                             '6a7c_1',\n",
      "                             '1ohj_1',\n",
      "                             '3gyf_1',\n",
      "                             '4g95_1',\n",
      "                             '5hui_1',\n",
      "                             '1dhf_1',\n",
      "                             '1s3u_1',\n",
      "                             '2dhf_1',\n",
      "                             '3ghv_1',\n",
      "                             '1hfp_1',\n",
      "                             '1hfq_1',\n",
      "                             '1ohk_1',\n",
      "                             '2w3m_1',\n",
      "                             '3eig_1',\n",
      "                             '3l3r_1',\n",
      "                             '3s3v_1',\n",
      "                             '4kbn_1',\n",
      "                             '5ht5_1',\n",
      "                             '5hvb_1',\n",
      "                             '6de4_1'],\n",
      " 'int_lig_entity': ['4', '3', '2'],\n",
      " 'interacting_ligands': ['SO4 : SULFATE ION',\n",
      "                         'NDP : NADPH '\n",
      "                         'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE PHOSPHATE',\n",
      "                         'D2F : '\n",
      "                         '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine'],\n",
      " 'interpro': ['IPR001796 : Dihydrofolate reductase domain',\n",
      "              'IPR024072 : Dihydrofolate reductase-like domain superfamily'],\n",
      " 'interpro_accession': ['IPR001796', 'IPR024072'],\n",
      " 'interpro_dom': ['IPR001796 : Dihydrofolate reductase domain'],\n",
      " 'interpro_dom_acc': ['IPR001796'],\n",
      " 'interpro_dom_name': ['Dihydrofolate reductase domain'],\n",
      " 'interpro_name': ['Dihydrofolate reductase domain',\n",
      "                   'Dihydrofolate reductase-like domain superfamily'],\n",
      " 'interpro_supfam': ['IPR024072 : Dihydrofolate reductase-like domain '\n",
      "                     'superfamily'],\n",
      " 'interpro_supfam_acc': ['IPR024072'],\n",
      " 'interpro_supfam_name': ['Dihydrofolate reductase-like domain superfamily'],\n",
      " 'inv_overall_quality': 91.0,\n",
      " 'journal': 'Acta Crystallogr. D Biol. Crystallogr.',\n",
      " 'journal_page': '1271-7',\n",
      " 'journal_volume': '66',\n",
      " 'matthews_coefficient': 2.49,\n",
      " 'max_observed_residues': 186,\n",
      " 'mesh_terms': 'Crystallography, X-Ray,Humans,Hydrophobic and Hydrophilic '\n",
      "               'Interactions,Models, Molecular,NADP,Protein Structure, '\n",
      "               'Tertiary,Pyrimidines,Stereoisomerism,Tetrahydrofolate '\n",
      "               'Dehydrogenase',\n",
      " 'model_quality': 40.91,\n",
      " 'modified_residue_flag': 'N',\n",
      " 'molecule_name': ['Dihydrofolate reductase'],\n",
      " 'molecule_sequence': 'VGSLNCIVAVSQNMGIGKNGDLPWPPLRNEFRYFQRMTTTSSVEGKQNLVIMGKKTWFSIPEKNRPLKGRINLVLSRELKEPPQGAHFLSRSLDDALKLTEQPELANKVDMVWIVGGSSVYKEAMNHPGHLKLFVTRIMQDFESDTFFPEIDLEKYKLLPEYPGVLSDVQEEKGIKYKFEVYEKND',\n",
      " 'molecule_synonym': ['Dihydrofolate reductase'],\n",
      " 'molecule_type': 'Protein',\n",
      " 'mutation': 'n',\n",
      " 'nigli_cell_a': 55.069,\n",
      " 'nigli_cell_alpha': 99.398,\n",
      " 'nigli_cell_b': 55.069,\n",
      " 'nigli_cell_beta': 99.398,\n",
      " 'nigli_cell_c': 55.069,\n",
      " 'nigli_cell_gamma': 99.398,\n",
      " 'nigli_cell_symmetry': 'R32',\n",
      " 'num_interacting_entity_id': [0],\n",
      " 'num_r_free_reflections': [811],\n",
      " 'number_of_bound_entities': 3,\n",
      " 'number_of_bound_molecules': 3,\n",
      " 'number_of_copies': 1,\n",
      " 'number_of_models': 1,\n",
      " 'number_of_polymer_entities': 1,\n",
      " 'number_of_polymer_residues': 186,\n",
      " 'number_of_polymers': 1,\n",
      " 'number_of_protein_chains': 1,\n",
      " 'organism_name': ['Homo sapiens',\n",
      "                   'Man',\n",
      "                   'Homo Sapiens (Human)',\n",
      "                   'Human',\n",
      "                   'Homo Sapiens',\n",
      "                   'Homo sapiens',\n",
      "                   'Homo',\n",
      "                   'Homininae',\n",
      "                   'Hominidae',\n",
      "                   'Primates',\n",
      "                   'Mammalia',\n",
      "                   'Chordata',\n",
      "                   'Metazoa',\n",
      "                   'Eukaryota'],\n",
      " 'organism_scientific_name': ['Homo sapiens'],\n",
      " 'organism_synonyms': ['Man',\n",
      "                       'Homo Sapiens (Human)',\n",
      "                       'Human',\n",
      "                       'Homo Sapiens',\n",
      "                       'Homo sapiens',\n",
      "                       'Homo',\n",
      "                       'Homininae',\n",
      "                       'Hominidae',\n",
      "                       'Primates',\n",
      "                       'Mammalia',\n",
      "                       'Chordata',\n",
      "                       'Metazoa',\n",
      "                       'Eukaryota'],\n",
      " 'overall_quality': 9.0,\n",
      " 'pdb_accession': '3nxv',\n",
      " 'pdb_format_compatible': 'Y',\n",
      " 'pdb_id': '3nxv',\n",
      " 'percent_solvent': 50.58,\n",
      " 'pfam': ['PF00186 : DHFR_1'],\n",
      " 'pfam_accession': ['PF00186'],\n",
      " 'pfam_clan': ['CL0387 : DHFred'],\n",
      " 'pfam_clan_name': ['DHFred'],\n",
      " 'pfam_description': ['Dihydrofolate reductase'],\n",
      " 'pfam_name': ['DHFR_1'],\n",
      " 'pivot_resolution': 1.9,\n",
      " 'polymer_length': 186,\n",
      " 'prefered_assembly_id': '1',\n",
      " 'primary_wavelength': 1.54198,\n",
      " 'processing_site': 'RCSB',\n",
      " 'pubmed_author_list': ['Cody V, Piraino J, Pace J, Li W, Gangjee A'],\n",
      " 'pubmed_authors': ['Cody V', 'Piraino J', 'Pace J', 'Li W', 'Gangjee A'],\n",
      " 'pubmed_id': '21123866',\n",
      " 'q_abstracttext_unassigned': ['The crystal structures of six human '\n",
      "                               'dihydrofolate reductase (hDHFR) ternary '\n",
      "                               'complexes with NADPH and a series of mixed E/Z '\n",
      "                               'isomers of 5-substituted '\n",
      "                               '5-[2-(2-methoxyphenyl)-prop-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamines '\n",
      "                               'substituted at the C9 position with propyl, '\n",
      "                               'isopropyl, cyclopropyl, butyl, isobutyl and '\n",
      "                               'sec-butyl (E2-E7, Z3) were determined and the '\n",
      "                               'results were compared with the resolved E and '\n",
      "                               'Z isomers of the C9-methyl parent compound. '\n",
      "                               'The configuration of all of the inhibitors, '\n",
      "                               'save one, was observed as the E isomer, in '\n",
      "                               'which the binding of the furopyrimidine ring '\n",
      "                               'is flipped such that the 4-amino group binds '\n",
      "                               'in the 4-oxo site of folate. The Z3\\xa0isomer '\n",
      "                               'of the C9-isopropyl analog has the normal '\n",
      "                               '2,4-diaminopyrimidine ring binding geometry, '\n",
      "                               'with the furo oxygen near Glu30 and the '\n",
      "                               '4-amino group interacting near the cofactor '\n",
      "                               'nicotinamide ring. Electron-density maps for '\n",
      "                               'these structures revealed the binding of only '\n",
      "                               'one isomer to hDHFR, despite the fact that '\n",
      "                               'chiral mixtures (E:Z ratios of 2:1, 3:1 and '\n",
      "                               '3:2) of the inhibitors were incubated with '\n",
      "                               'hDHFR prior to crystallization. Superposition '\n",
      "                               'of the hDHFR complexes with E2 and Z3 shows '\n",
      "                               \"that the 2'-methoxyphenyl ring of E2 is \"\n",
      "                               'perpendicular to that of Z3. The most potent '\n",
      "                               'inhibitor in this series is the isopropyl '\n",
      "                               'analog Z3 and the least potent is the isobutyl '\n",
      "                               'analog E6, consistent with data that show that '\n",
      "                               'the Z isomer makes the most favorable '\n",
      "                               'interactions with the active-site residues. '\n",
      "                               'The isobutyl moiety of E6 is observed in two '\n",
      "                               'orientations and the resultant steric crowding '\n",
      "                               'of the E6 analog is consistent with its weaker '\n",
      "                               'activity. The alternative binding modes '\n",
      "                               'observed for the furopyrimidine ring in these '\n",
      "                               'E/Z isomers suggest that new templates can be '\n",
      "                               'designed to probe these binding regions of the '\n",
      "                               'DHFR active site.'],\n",
      " 'q_all_assembly_composition': ['protein structure'],\n",
      " 'q_all_assembly_form': ['homo'],\n",
      " 'q_all_assembly_id': ['1'],\n",
      " 'q_all_assembly_mol_wt': [22.547],\n",
      " 'q_all_assembly_type': ['monomer'],\n",
      " 'q_all_authors': ['Cody V', 'Gangjee A', 'Li W', 'Pace J', 'Piraino J'],\n",
      " 'q_all_compound_names': ['D2F : '\n",
      "                          '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'NDP : NADPH '\n",
      "                          'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE PHOSPHATE',\n",
      "                          'SO4 : SULFATE ION',\n",
      "                          'NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                          'phosphate',\n",
      "                          'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                          'phosphate',\n",
      "                          'NDP : TPNH',\n",
      "                          'SO4 : Sulfate',\n",
      "                          'SO4 : Sulfate dianion',\n",
      "                          'SO4 : Sulfate(2-)',\n",
      "                          'SO4 : Sulfuric acid ion(2-)',\n",
      "                          'D2F : '\n",
      "                          '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'SO4 : sulfate',\n",
      "                          'D2F : '\n",
      "                          '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'NDP : '\n",
      "                          '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                          '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                          'hydrogen phosphate'],\n",
      " 'q_all_enzyme_names': ['Oxidoreductases',\n",
      "                        'Acting on the CH-NH group of donors',\n",
      "                        'With NAD(+) or NADP(+) as acceptor',\n",
      "                        'Dihydrofolate reductase',\n",
      "                        '1.5.1.3 : Dihydrofolate reductase',\n",
      "                        '5,6,7,8-tetrahydrofolate:NADP(+) oxidoreductase'],\n",
      " 'q_all_go_terms': ['cytoplasm',\n",
      "                    'mitochondrion',\n",
      "                    'cytosol',\n",
      "                    'folic acid binding',\n",
      "                    'oxidoreductase activity',\n",
      "                    'NADPH binding',\n",
      "                    'sequence-specific mRNA binding',\n",
      "                    'RNA binding',\n",
      "                    'mRNA binding',\n",
      "                    'NADP binding',\n",
      "                    'methotrexate binding',\n",
      "                    'dihydrofolate reductase activity',\n",
      "                    'translation repressor activity, mRNA regulatory element '\n",
      "                    'binding',\n",
      "                    'drug binding',\n",
      "                    'one-carbon metabolic process',\n",
      "                    'negative regulation of translation',\n",
      "                    'folic acid metabolic process',\n",
      "                    'response to methotrexate',\n",
      "                    'regulation of removal of superoxide radicals',\n",
      "                    'tetrahydrobiopterin biosynthetic process',\n",
      "                    'tetrahydrofolate metabolic process',\n",
      "                    'tetrahydrofolate biosynthetic process',\n",
      "                    'oxidation-reduction process',\n",
      "                    'regulation of transcription involved in G1/S transition '\n",
      "                    'of mitotic cell cycle',\n",
      "                    'positive regulation of nitric-oxide synthase activity',\n",
      "                    'axon regeneration',\n",
      "                    'dihydrofolate metabolic process'],\n",
      " 'q_all_molecule_names': ['Dihydrofolate reductase', 'Dihydrofolate reductase'],\n",
      " 'q_all_num_interacting_entity_id': [0],\n",
      " 'q_all_sequence_family': ['IPR001796 : Dihydrofolate reductase domain',\n",
      "                           'IPR024072 : Dihydrofolate reductase-like domain '\n",
      "                           'superfamily',\n",
      "                           'PF00186 : DHFR_1',\n",
      "                           'CL0387 : DHFred'],\n",
      " 'q_all_structure_family': ['3-Layer(aba) Sandwich',\n",
      "                            'Alpha Beta',\n",
      "                            '3.40.430.10',\n",
      "                            'Dihydrofolate Reductase, subunit A',\n",
      "                            'Dihydrofolate Reductase, subunit A'],\n",
      " 'q_assembly_composition': ['protein structure'],\n",
      " 'q_assembly_form': ['homo'],\n",
      " 'q_assembly_id': ['1'],\n",
      " 'q_assembly_mol_wt': 22.547,\n",
      " 'q_assembly_num_component': [1],\n",
      " 'q_assembly_type': ['monomer'],\n",
      " 'q_beam_source_name': ['Rotating anode'],\n",
      " 'q_biological_cell_component': ['cytoplasm', 'mitochondrion', 'cytosol'],\n",
      " 'q_biological_function': ['folic acid binding',\n",
      "                           'oxidoreductase activity',\n",
      "                           'NADPH binding',\n",
      "                           'sequence-specific mRNA binding',\n",
      "                           'RNA binding',\n",
      "                           'mRNA binding',\n",
      "                           'NADP binding',\n",
      "                           'methotrexate binding',\n",
      "                           'dihydrofolate reductase activity',\n",
      "                           'translation repressor activity, mRNA regulatory '\n",
      "                           'element binding',\n",
      "                           'drug binding'],\n",
      " 'q_biological_process': ['one-carbon metabolic process',\n",
      "                          'negative regulation of translation',\n",
      "                          'folic acid metabolic process',\n",
      "                          'response to methotrexate',\n",
      "                          'regulation of removal of superoxide radicals',\n",
      "                          'tetrahydrobiopterin biosynthetic process',\n",
      "                          'tetrahydrofolate metabolic process',\n",
      "                          'tetrahydrofolate biosynthetic process',\n",
      "                          'oxidation-reduction process',\n",
      "                          'regulation of transcription involved in G1/S '\n",
      "                          'transition of mitotic cell cycle',\n",
      "                          'positive regulation of nitric-oxide synthase '\n",
      "                          'activity',\n",
      "                          'axon regeneration',\n",
      "                          'dihydrofolate metabolic process'],\n",
      " 'q_bound_compound_id': ['D2F', 'NDP', 'SO4'],\n",
      " 'q_bound_compound_name': ['D2F : '\n",
      "                           '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                           'NDP : NADPH '\n",
      "                           'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE '\n",
      "                           'PHOSPHATE',\n",
      "                           'SO4 : SULFATE ION'],\n",
      " 'q_bound_compound_synonym': ['NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                              'phosphate',\n",
      "                              'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                              'phosphate',\n",
      "                              'NDP : TPNH',\n",
      "                              'SO4 : Sulfate',\n",
      "                              'SO4 : Sulfate dianion',\n",
      "                              'SO4 : Sulfate(2-)',\n",
      "                              'SO4 : Sulfuric acid ion(2-)'],\n",
      " 'q_bound_compound_systematic_name': ['D2F : '\n",
      "                                      '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                      'SO4 : sulfate',\n",
      "                                      'D2F : '\n",
      "                                      '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                      'NDP : '\n",
      "                                      '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                                      '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                                      'hydrogen phosphate'],\n",
      " 'q_bound_compound_weight': [338.404, 745.421, 96.063],\n",
      " 'q_cath_architecture': ['3-Layer(aba) Sandwich'],\n",
      " 'q_cath_class': ['Alpha Beta'],\n",
      " 'q_cath_code': ['3.40.430.10'],\n",
      " 'q_cath_homologous_superfamily': ['Dihydrofolate Reductase, subunit A'],\n",
      " 'q_cath_topology': ['Dihydrofolate Reductase, subunit A'],\n",
      " 'q_cell_a': 83.998,\n",
      " 'q_cell_alpha': 90.0,\n",
      " 'q_cell_b': 83.998,\n",
      " 'q_cell_beta': 90.0,\n",
      " 'q_cell_c': 78.273,\n",
      " 'q_cell_gamma': 120.0,\n",
      " 'q_chain_id': 'A',\n",
      " 'q_citation_authors': ['Cody V', 'Piraino J', 'Pace J', 'Li W', 'Gangjee A'],\n",
      " 'q_citation_doi': '10.1107/S0907444910035808',\n",
      " 'q_citation_title': 'Preferential selection of isomer binding from chiral '\n",
      "                     'mixtures: alternate binding modes observed for the E and '\n",
      "                     'Z isomers of a series of 5-substituted '\n",
      "                     '2,4-diaminofuro[2,3-d]pyrimidines as ternary complexes '\n",
      "                     'with NADPH and human dihydrofolate reductase.',\n",
      " 'q_citation_year': 2010,\n",
      " 'q_cofactor_class': ['Nicotinamide-adenine dinucleotide'],\n",
      " 'q_cofactor_id': ['NDP'],\n",
      " 'q_compound_id': ['D2F', 'NDP', 'SO4'],\n",
      " 'q_compound_name': ['D2F : '\n",
      "                     '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                     'NDP : NADPH DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE '\n",
      "                     'PHOSPHATE',\n",
      "                     'SO4 : SULFATE ION'],\n",
      " 'q_compound_synonym': ['NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                        'phosphate',\n",
      "                        'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                        'phosphate',\n",
      "                        'NDP : TPNH',\n",
      "                        'SO4 : Sulfate',\n",
      "                        'SO4 : Sulfate dianion',\n",
      "                        'SO4 : Sulfate(2-)',\n",
      "                        'SO4 : Sulfuric acid ion(2-)'],\n",
      " 'q_compound_systematic_name': ['D2F : '\n",
      "                                '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                'SO4 : sulfate',\n",
      "                                'D2F : '\n",
      "                                '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                                'NDP : '\n",
      "                                '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                                '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                                'hydrogen phosphate'],\n",
      " 'q_compound_weight': [338.404, 745.421, 96.063],\n",
      " 'q_crystallisation_cond': ['100 mM K2PO4, 60% saturated ammonium sulfate, 3% '\n",
      "                            'v/v ethanol, pH 6.9, VAPOR DIFFUSION, HANGING '\n",
      "                            'DROP, temperature 298K'],\n",
      " 'q_crystallisation_method': 'VAPOR DIFFUSION, HANGING DROP',\n",
      " 'q_crystallisation_ph': [6.9, 6.9],\n",
      " 'q_crystallisation_reservoir': ['POTASSIUM PHOSPHATE',\n",
      "                                 'AMMONIUM SULFATE',\n",
      "                                 'ETHANOL'],\n",
      " 'q_crystallisation_temperature': 298.0,\n",
      " 'q_data_collection_date': ['2008-12-06T00:00:00Z'],\n",
      " 'q_data_collection_year': [2008],\n",
      " 'q_data_quality': 33.46,\n",
      " 'q_data_reduction_software': ['MOSFLM'],\n",
      " 'q_data_scaling_software': ['SCALA'],\n",
      " 'q_deposition_date': '2010-07-14T01:00:00Z',\n",
      " 'q_deposition_site': 'RCSB',\n",
      " 'q_deposition_year': 2010,\n",
      " 'q_detector': ['Image plate'],\n",
      " 'q_detector_type': ['RIGAKU RAXIS IV'],\n",
      " 'q_diffraction_protocol': ['Single wavelength'],\n",
      " 'q_diffraction_source_type': ['RIGAKU RU300'],\n",
      " 'q_diffraction_wavelengths': [1.54198],\n",
      " 'q_ec_hierarchy_name': ['Oxidoreductases',\n",
      "                         'Acting on the CH-NH group of donors',\n",
      "                         'With NAD(+) or NADP(+) as acceptor',\n",
      "                         'Dihydrofolate reductase'],\n",
      " 'q_ec_number': ['1.5.1.3'],\n",
      " 'q_entity_id': 1,\n",
      " 'q_entity_weight': 21349.525,\n",
      " 'q_entry_author_list': ['Cody V'],\n",
      " 'q_entry_authors': ['Cody V'],\n",
      " 'q_entry_lig_entity': ['3nxv_SO4_4', '3nxv_NDP_3', '3nxv_D2F_2'],\n",
      " 'q_enzyme_name': ['Dihydrofolate reductase'],\n",
      " 'q_enzyme_num_name': ['1.5.1.3 : Dihydrofolate reductase'],\n",
      " 'q_enzyme_systematic_name': ['5,6,7,8-tetrahydrofolate:NADP(+) '\n",
      "                              'oxidoreductase'],\n",
      " 'q_experiment_data_available': ['y'],\n",
      " 'q_experimental_method': ['X-ray diffraction'],\n",
      " 'q_expression_host_sci_name': ['Escherichia coli'],\n",
      " 'q_expression_host_synonyms': ['Bacterium Coli',\n",
      "                                'Enterococcus Coli',\n",
      "                                'Bacterium 10a',\n",
      "                                'Escherichia Coli',\n",
      "                                'Escherichia Sp. 3_2_53faa',\n",
      "                                'Escherichia/Shigella Coli',\n",
      "                                'Ecolx',\n",
      "                                'Bacterium E3',\n",
      "                                'Bacterium Coli Commune',\n",
      "                                'E. Coli',\n",
      "                                'Bacillus Coli',\n",
      "                                'Escherichia Sp. Mar',\n",
      "                                'Escherichia coli',\n",
      "                                'Escherichia',\n",
      "                                'Enterobacteriaceae',\n",
      "                                'Enterobacterales',\n",
      "                                'Gammaproteobacteria',\n",
      "                                'Proteobacteria',\n",
      "                                'Bacteria'],\n",
      " 'q_expression_host_tax_id': [562],\n",
      " 'q_expression_organism_name': ['Escherichia coli',\n",
      "                                'Bacterium Coli',\n",
      "                                'Enterococcus Coli',\n",
      "                                'Bacterium 10a',\n",
      "                                'Escherichia Coli',\n",
      "                                'Escherichia Sp. 3_2_53faa',\n",
      "                                'Escherichia/Shigella Coli',\n",
      "                                'Ecolx',\n",
      "                                'Bacterium E3',\n",
      "                                'Bacterium Coli Commune',\n",
      "                                'E. Coli',\n",
      "                                'Bacillus Coli',\n",
      "                                'Escherichia Sp. Mar',\n",
      "                                'Escherichia coli',\n",
      "                                'Escherichia',\n",
      "                                'Enterobacteriaceae',\n",
      "                                'Enterobacterales',\n",
      "                                'Gammaproteobacteria',\n",
      "                                'Proteobacteria',\n",
      "                                'Bacteria'],\n",
      " 'q_gene_name': ['DHFR'],\n",
      " 'q_genus': ['Homo'],\n",
      " 'q_go_id': ['GO:0006730',\n",
      "             'GO:0017148',\n",
      "             'GO:0046655',\n",
      "             'GO:0031427',\n",
      "             'GO:2000121',\n",
      "             'GO:0006729',\n",
      "             'GO:0046653',\n",
      "             'GO:0046654',\n",
      "             'GO:0055114',\n",
      "             'GO:0000083',\n",
      "             'GO:0051000',\n",
      "             'GO:0031103',\n",
      "             'GO:0046452',\n",
      "             'GO:0005542',\n",
      "             'GO:0016491',\n",
      "             'GO:0070402',\n",
      "             'GO:1990825',\n",
      "             'GO:0003723',\n",
      "             'GO:0003729',\n",
      "             'GO:0050661',\n",
      "             'GO:0051870',\n",
      "             'GO:0004146',\n",
      "             'GO:0000900',\n",
      "             'GO:0008144',\n",
      "             'GO:0005737',\n",
      "             'GO:0005739',\n",
      "             'GO:0005829'],\n",
      " 'q_go_mapping': ['GO:0006730 : one-carbon metabolic process',\n",
      "                  'GO:0017148 : negative regulation of translation',\n",
      "                  'GO:0046655 : folic acid metabolic process',\n",
      "                  'GO:0031427 : response to methotrexate',\n",
      "                  'GO:2000121 : regulation of removal of superoxide radicals',\n",
      "                  'GO:0006729 : tetrahydrobiopterin biosynthetic process',\n",
      "                  'GO:0046653 : tetrahydrofolate metabolic process',\n",
      "                  'GO:0046654 : tetrahydrofolate biosynthetic process',\n",
      "                  'GO:0055114 : oxidation-reduction process',\n",
      "                  'GO:0000083 : regulation of transcription involved in G1/S '\n",
      "                  'transition of mitotic cell cycle',\n",
      "                  'GO:0051000 : positive regulation of nitric-oxide synthase '\n",
      "                  'activity',\n",
      "                  'GO:0031103 : axon regeneration',\n",
      "                  'GO:0046452 : dihydrofolate metabolic process',\n",
      "                  'GO:0005542 : folic acid binding',\n",
      "                  'GO:0016491 : oxidoreductase activity',\n",
      "                  'GO:0070402 : NADPH binding',\n",
      "                  'GO:1990825 : sequence-specific mRNA binding',\n",
      "                  'GO:0003723 : RNA binding',\n",
      "                  'GO:0003729 : mRNA binding',\n",
      "                  'GO:0050661 : NADP binding',\n",
      "                  'GO:0051870 : methotrexate binding',\n",
      "                  'GO:0004146 : dihydrofolate reductase activity',\n",
      "                  'GO:0000900 : translation repressor activity, mRNA '\n",
      "                  'regulatory element binding',\n",
      "                  'GO:0008144 : drug binding',\n",
      "                  'GO:0005737 : cytoplasm',\n",
      "                  'GO:0005739 : mitochondrion',\n",
      "                  'GO:0005829 : cytosol'],\n",
      " 'q_has_bound_molecule': 'Y',\n",
      " 'q_has_carb_polymer': 'N',\n",
      " 'q_has_cofactor': ['Y'],\n",
      " 'q_has_modified_residues': 'N',\n",
      " 'q_has_reactant': ['Y'],\n",
      " 'q_homologus_pdb_entity_id': ['4qhv_1',\n",
      "                               '6dav_1',\n",
      "                               '1dlr_1',\n",
      "                               '4kak_1',\n",
      "                               '4keb_1',\n",
      "                               '5hqy_1',\n",
      "                               '5hqz_1',\n",
      "                               '1u72_1',\n",
      "                               '2w3b_1',\n",
      "                               '5hsr_1',\n",
      "                               '5ht4_1',\n",
      "                               '3nu0_1',\n",
      "                               '3nxo_1',\n",
      "                               '3nxt_1',\n",
      "                               '3nxv_1',\n",
      "                               '2c2s_1',\n",
      "                               '3nxr_1',\n",
      "                               '1hfr_1',\n",
      "                               '1s3v_1',\n",
      "                               '1s3w_1',\n",
      "                               '1u71_1',\n",
      "                               '1yho_1',\n",
      "                               '2w3a_1',\n",
      "                               '3nxy_1',\n",
      "                               '3nzd_1',\n",
      "                               '3s7a_1',\n",
      "                               '5hve_1',\n",
      "                               '1dls_1',\n",
      "                               '1drf_1',\n",
      "                               '1mvs_1',\n",
      "                               '2c2t_1',\n",
      "                               '4m6j_1',\n",
      "                               '1kms_1',\n",
      "                               '1pd9_1',\n",
      "                               '3ghc_1',\n",
      "                               '3ghw_1',\n",
      "                               '3ntz_1',\n",
      "                               '3nxx_1',\n",
      "                               '1pdb_1',\n",
      "                               '3f8y_1',\n",
      "                               '3gi2_1',\n",
      "                               '6a7e_1',\n",
      "                               '1pd8_1',\n",
      "                               '4ddr_1',\n",
      "                               '4m6k_1',\n",
      "                               '3f8z_1',\n",
      "                               '3f91_1',\n",
      "                               '3fs6_1',\n",
      "                               '4m6l_1',\n",
      "                               '4qjc_1',\n",
      "                               '5hsu_1',\n",
      "                               '1boz_1',\n",
      "                               '3n0h_1',\n",
      "                               '4kfj_1',\n",
      "                               '1kmv_1',\n",
      "                               '1mvt_1',\n",
      "                               '3oaf_1',\n",
      "                               '4kd7_1',\n",
      "                               '5hpb_1',\n",
      "                               '6a7c_1',\n",
      "                               '1ohj_1',\n",
      "                               '3gyf_1',\n",
      "                               '4g95_1',\n",
      "                               '5hui_1',\n",
      "                               '1dhf_1',\n",
      "                               '1s3u_1',\n",
      "                               '2dhf_1',\n",
      "                               '3ghv_1',\n",
      "                               '1hfp_1',\n",
      "                               '1hfq_1',\n",
      "                               '1ohk_1',\n",
      "                               '2w3m_1',\n",
      "                               '3eig_1',\n",
      "                               '3l3r_1',\n",
      "                               '3s3v_1',\n",
      "                               '4kbn_1',\n",
      "                               '5ht5_1',\n",
      "                               '5hvb_1',\n",
      "                               '6de4_1'],\n",
      " 'q_int_lig_entity': ['4', '3', '2'],\n",
      " 'q_interacting_ligands': ['SO4 : SULFATE ION',\n",
      "                           'NDP : NADPH '\n",
      "                           'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE '\n",
      "                           'PHOSPHATE',\n",
      "                           'D2F : '\n",
      "                           '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine'],\n",
      " 'q_interpro': ['IPR001796 : Dihydrofolate reductase domain',\n",
      "                'IPR024072 : Dihydrofolate reductase-like domain superfamily'],\n",
      " 'q_interpro_accession': ['IPR001796', 'IPR024072'],\n",
      " 'q_interpro_dom': ['IPR001796 : Dihydrofolate reductase domain'],\n",
      " 'q_interpro_dom_acc': ['IPR001796'],\n",
      " 'q_interpro_dom_name': ['Dihydrofolate reductase domain'],\n",
      " 'q_interpro_name': ['Dihydrofolate reductase domain',\n",
      "                     'Dihydrofolate reductase-like domain superfamily'],\n",
      " 'q_interpro_supfam': ['IPR024072 : Dihydrofolate reductase-like domain '\n",
      "                       'superfamily'],\n",
      " 'q_interpro_supfam_acc': ['IPR024072'],\n",
      " 'q_interpro_supfam_name': ['Dihydrofolate reductase-like domain superfamily'],\n",
      " 'q_inv_overall_quality': 91.0,\n",
      " 'q_journal': 'Acta Crystallogr. D Biol. Crystallogr.',\n",
      " 'q_journal_page': '1271-7',\n",
      " 'q_journal_volume': '66',\n",
      " 'q_matthews_coefficient': 2.49,\n",
      " 'q_max_observed_residues': 186,\n",
      " 'q_mesh_terms': 'Crystallography, X-Ray,Humans,Hydrophobic and Hydrophilic '\n",
      "                 'Interactions,Models, Molecular,NADP,Protein Structure, '\n",
      "                 'Tertiary,Pyrimidines,Stereoisomerism,Tetrahydrofolate '\n",
      "                 'Dehydrogenase',\n",
      " 'q_model_quality': 40.91,\n",
      " 'q_modified_residue_flag': 'N',\n",
      " 'q_molecule_name': ['Dihydrofolate reductase'],\n",
      " 'q_molecule_sequence': 'VGSLNCIVAVSQNMGIGKNGDLPWPPLRNEFRYFQRMTTTSSVEGKQNLVIMGKKTWFSIPEKNRPLKGRINLVLSRELKEPPQGAHFLSRSLDDALKLTEQPELANKVDMVWIVGGSSVYKEAMNHPGHLKLFVTRIMQDFESDTFFPEIDLEKYKLLPEYPGVLSDVQEEKGIKYKFEVYEKND',\n",
      " 'q_molecule_synonym': ['Dihydrofolate reductase'],\n",
      " 'q_molecule_type': 'Protein',\n",
      " 'q_mutation': 'n',\n",
      " 'q_nigli_cell_a': 55.069,\n",
      " 'q_nigli_cell_alpha': 99.398,\n",
      " 'q_nigli_cell_b': 55.069,\n",
      " 'q_nigli_cell_beta': 99.398,\n",
      " 'q_nigli_cell_c': 55.069,\n",
      " 'q_nigli_cell_gamma': 99.398,\n",
      " 'q_nigli_cell_symmetry': 'R32',\n",
      " 'q_num_interacting_entity_id': [0],\n",
      " 'q_num_r_free_reflections': [811],\n",
      " 'q_number_of_bound_entities': 3,\n",
      " 'q_number_of_bound_molecules': 3,\n",
      " 'q_number_of_copies': 1,\n",
      " 'q_number_of_models': 1,\n",
      " 'q_number_of_polymer_entities': 1,\n",
      " 'q_number_of_polymer_residues': 186,\n",
      " 'q_number_of_polymers': 1,\n",
      " 'q_number_of_protein_chains': 1,\n",
      " 'q_organism_name': ['Homo sapiens',\n",
      "                     'Man',\n",
      "                     'Homo Sapiens (Human)',\n",
      "                     'Human',\n",
      "                     'Homo Sapiens',\n",
      "                     'Homo sapiens',\n",
      "                     'Homo',\n",
      "                     'Homininae',\n",
      "                     'Hominidae',\n",
      "                     'Primates',\n",
      "                     'Mammalia',\n",
      "                     'Chordata',\n",
      "                     'Metazoa',\n",
      "                     'Eukaryota'],\n",
      " 'q_organism_scientific_name': ['Homo sapiens'],\n",
      " 'q_organism_synonyms': ['Man',\n",
      "                         'Homo Sapiens (Human)',\n",
      "                         'Human',\n",
      "                         'Homo Sapiens',\n",
      "                         'Homo sapiens',\n",
      "                         'Homo',\n",
      "                         'Homininae',\n",
      "                         'Hominidae',\n",
      "                         'Primates',\n",
      "                         'Mammalia',\n",
      "                         'Chordata',\n",
      "                         'Metazoa',\n",
      "                         'Eukaryota'],\n",
      " 'q_overall_quality': 9.0,\n",
      " 'q_pdb_accession': '3nxv',\n",
      " 'q_pdb_format_compatible': 'Y',\n",
      " 'q_pdb_id': '3nxv',\n",
      " 'q_percent_solvent': 50.58,\n",
      " 'q_pfam': ['PF00186 : DHFR_1'],\n",
      " 'q_pfam_accession': ['PF00186'],\n",
      " 'q_pfam_clan': ['CL0387 : DHFred'],\n",
      " 'q_pfam_clan_name': ['DHFred'],\n",
      " 'q_pfam_description': ['Dihydrofolate reductase'],\n",
      " 'q_pfam_name': ['DHFR_1'],\n",
      " 'q_pivot_resolution': 1.9,\n",
      " 'q_polymer_length': 186,\n",
      " 'q_prefered_assembly_id': '1',\n",
      " 'q_primary_wavelength': 1.54198,\n",
      " 'q_processing_site': 'RCSB',\n",
      " 'q_pubmed_author_list': ['Cody V, Piraino J, Pace J, Li W, Gangjee A'],\n",
      " 'q_pubmed_authors': ['Cody V', 'Piraino J', 'Pace J', 'Li W', 'Gangjee A'],\n",
      " 'q_pubmed_id': '21123866',\n",
      " 'q_r_factor': 0.19536,\n",
      " 'q_r_free': 0.2456,\n",
      " 'q_r_work': [0.19278],\n",
      " 'q_rank': ['species',\n",
      "            'genus',\n",
      "            'subfamily',\n",
      "            'family',\n",
      "            'order',\n",
      "            'class',\n",
      "            'phylum',\n",
      "            'kingdom',\n",
      "            'superkingdom',\n",
      "            'species',\n",
      "            'genus',\n",
      "            'family',\n",
      "            'order',\n",
      "            'class',\n",
      "            'phylum',\n",
      "            'superkingdom'],\n",
      " 'q_reactant_id': ['NDP'],\n",
      " 'q_refinement_software': ['REFMAC'],\n",
      " 'q_release_date': '2010-12-01T01:00:00Z',\n",
      " 'q_release_year': 2010,\n",
      " 'q_resolution': 1.9,\n",
      " 'q_revision_date': '2017-11-08T01:00:00Z',\n",
      " 'q_revision_year': 2017,\n",
      " 'q_sample_preparation_method': ['Engineered'],\n",
      " 'q_seq_100_cluster_number': '4490',\n",
      " 'q_seq_100_cluster_rank': 61,\n",
      " 'q_seq_30_cluster_number': '27142',\n",
      " 'q_seq_30_cluster_rank': 93,\n",
      " 'q_seq_40_cluster_number': '26258',\n",
      " 'q_seq_40_cluster_rank': 93,\n",
      " 'q_seq_50_cluster_number': '11970',\n",
      " 'q_seq_50_cluster_rank': 93,\n",
      " 'q_seq_70_cluster_number': '2815',\n",
      " 'q_seq_70_cluster_rank': 93,\n",
      " 'q_seq_90_cluster_number': '26718',\n",
      " 'q_seq_90_cluster_rank': 79,\n",
      " 'q_seq_95_cluster_number': '26336',\n",
      " 'q_seq_95_cluster_rank': 79,\n",
      " 'q_serial_crystal_experiment': ['N'],\n",
      " 'q_spacegroup': 'H 3',\n",
      " 'q_status': 'REL',\n",
      " 'q_struct_asym_id': ['A'],\n",
      " 'q_structure_determination_method': ['MOLECULAR REPLACEMENT'],\n",
      " 'q_structure_solution_software': ['MOLREP'],\n",
      " 'q_superkingdom': ['Eukaryota'],\n",
      " 'q_tax_id': [9606],\n",
      " 'q_tax_query': [9606],\n",
      " 'q_title': 'Preferential Selection of Isomer Binding from Chiral Mixtures: '\n",
      "            'Alternate Binding Modes Observed for the E- and Z-isomers of a '\n",
      "            'Series of 5-Substituted 2,4-Diaminofuro[2,3-d]pyrimidines as '\n",
      "            'Ternary Complexes with NADPH and Human Dihydrofolate Reductase',\n",
      " 'q_uniprot': ['P00374 : DYR_HUMAN'],\n",
      " 'q_uniprot_accession': ['P00374', 'P00374-2'],\n",
      " 'q_uniprot_accession_best': ['P00374'],\n",
      " 'q_uniprot_best': ['P00374 : DYR_HUMAN'],\n",
      " 'q_uniprot_coverage': [0.99],\n",
      " 'q_uniprot_features': ['Protein has possible alternate isoforms',\n",
      "                        'DHFR',\n",
      "                        'Protein has possible natural variant ',\n",
      "                        'Nucleotide binding - NADP'],\n",
      " 'q_uniprot_id': ['DYR_HUMAN', 'DYR_HUMAN'],\n",
      " 'q_uniprot_id_best': ['DYR_HUMAN'],\n",
      " 'q_uniprot_non_canonical': ['P00374-2 : DYR_HUMAN'],\n",
      " 'q_unp_count': 1,\n",
      " 'q_unp_nf90_accession': ['B0YJ76',\n",
      "                          'A0A2K6C3Y8',\n",
      "                          'S5WD14',\n",
      "                          'S5VM81',\n",
      "                          'P00374',\n",
      "                          'A0A024RAQ3'],\n",
      " 'q_unp_nf90_id': ['B0YJ76_HUMAN',\n",
      "                   'A0A2K6C3Y8_MACNE',\n",
      "                   'S5WD14_SHISS',\n",
      "                   'S5VM81_ECO57',\n",
      "                   'DYR_HUMAN',\n",
      "                   'A0A024RAQ3_HUMAN'],\n",
      " 'q_unp_nf90_organism': ['Homo sapiens (Human)',\n",
      "                         'Macaca nemestrina (Pig-tailed macaque)',\n",
      "                         'Shigella sonnei (strain Ss046)',\n",
      "                         'Escherichia coli O157:H7',\n",
      "                         'Homo sapiens (Human)',\n",
      "                         'Homo sapiens (Human)'],\n",
      " 'q_unp_nf90_protein_name': ['Dihydrofolate reductase',\n",
      "                             'DHFR domain-containing protein',\n",
      "                             'Dihydrofolate reductase',\n",
      "                             'Dihydrofolate reductase',\n",
      "                             'Dihydrofolate reductase',\n",
      "                             'Dihydrofolate reductase'],\n",
      " 'q_unp_nf90_tax_id': ['9606', '9545', '300269', '83334', '9606', '9606'],\n",
      " 'r_factor': 0.19536,\n",
      " 'r_free': 0.2456,\n",
      " 'r_work': [0.19278],\n",
      " 'rank': ['species',\n",
      "          'genus',\n",
      "          'subfamily',\n",
      "          'family',\n",
      "          'order',\n",
      "          'class',\n",
      "          'phylum',\n",
      "          'kingdom',\n",
      "          'superkingdom',\n",
      "          'species',\n",
      "          'genus',\n",
      "          'family',\n",
      "          'order',\n",
      "          'class',\n",
      "          'phylum',\n",
      "          'superkingdom'],\n",
      " 'reactant_id': ['NDP'],\n",
      " 'refinement_software': ['REFMAC'],\n",
      " 'release_date': '2010-12-01T01:00:00Z',\n",
      " 'release_year': 2010,\n",
      " 'resolution': 1.9,\n",
      " 'revision_date': '2017-11-08T01:00:00Z',\n",
      " 'revision_year': 2017,\n",
      " 'sample_preparation_method': ['Engineered'],\n",
      " 'seq_100_cluster_number': '4490',\n",
      " 'seq_100_cluster_rank': 61,\n",
      " 'seq_30_cluster_number': '27142',\n",
      " 'seq_30_cluster_rank': 93,\n",
      " 'seq_40_cluster_number': '26258',\n",
      " 'seq_40_cluster_rank': 93,\n",
      " 'seq_50_cluster_number': '11970',\n",
      " 'seq_50_cluster_rank': 93,\n",
      " 'seq_70_cluster_number': '2815',\n",
      " 'seq_70_cluster_rank': 93,\n",
      " 'seq_90_cluster_number': '26718',\n",
      " 'seq_90_cluster_rank': 79,\n",
      " 'seq_95_cluster_number': '26336',\n",
      " 'seq_95_cluster_rank': 79,\n",
      " 'serial_crystal_experiment': ['N'],\n",
      " 'spacegroup': 'H 3',\n",
      " 'status': 'REL',\n",
      " 'struct_asym_id': ['A'],\n",
      " 'structure_determination_method': ['MOLECULAR REPLACEMENT'],\n",
      " 'structure_solution_software': ['MOLREP'],\n",
      " 'superkingdom': ['Eukaryota'],\n",
      " 't_abstracttext_unassigned': ['The crystal structures of six human '\n",
      "                               'dihydrofolate reductase (hDHFR) ternary '\n",
      "                               'complexes with NADPH and a series of mixed E/Z '\n",
      "                               'isomers of 5-substituted '\n",
      "                               '5-[2-(2-methoxyphenyl)-prop-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamines '\n",
      "                               'substituted at the C9 position with propyl, '\n",
      "                               'isopropyl, cyclopropyl, butyl, isobutyl and '\n",
      "                               'sec-butyl (E2-E7, Z3) were determined and the '\n",
      "                               'results were compared with the resolved E and '\n",
      "                               'Z isomers of the C9-methyl parent compound. '\n",
      "                               'The configuration of all of the inhibitors, '\n",
      "                               'save one, was observed as the E isomer, in '\n",
      "                               'which the binding of the furopyrimidine ring '\n",
      "                               'is flipped such that the 4-amino group binds '\n",
      "                               'in the 4-oxo site of folate. The Z3\\xa0isomer '\n",
      "                               'of the C9-isopropyl analog has the normal '\n",
      "                               '2,4-diaminopyrimidine ring binding geometry, '\n",
      "                               'with the furo oxygen near Glu30 and the '\n",
      "                               '4-amino group interacting near the cofactor '\n",
      "                               'nicotinamide ring. Electron-density maps for '\n",
      "                               'these structures revealed the binding of only '\n",
      "                               'one isomer to hDHFR, despite the fact that '\n",
      "                               'chiral mixtures (E:Z ratios of 2:1, 3:1 and '\n",
      "                               '3:2) of the inhibitors were incubated with '\n",
      "                               'hDHFR prior to crystallization. Superposition '\n",
      "                               'of the hDHFR complexes with E2 and Z3 shows '\n",
      "                               \"that the 2'-methoxyphenyl ring of E2 is \"\n",
      "                               'perpendicular to that of Z3. The most potent '\n",
      "                               'inhibitor in this series is the isopropyl '\n",
      "                               'analog Z3 and the least potent is the isobutyl '\n",
      "                               'analog E6, consistent with data that show that '\n",
      "                               'the Z isomer makes the most favorable '\n",
      "                               'interactions with the active-site residues. '\n",
      "                               'The isobutyl moiety of E6 is observed in two '\n",
      "                               'orientations and the resultant steric crowding '\n",
      "                               'of the E6 analog is consistent with its weaker '\n",
      "                               'activity. The alternative binding modes '\n",
      "                               'observed for the furopyrimidine ring in these '\n",
      "                               'E/Z isomers suggest that new templates can be '\n",
      "                               'designed to probe these binding regions of the '\n",
      "                               'DHFR active site.'],\n",
      " 't_all_compound_names': ['Nicotinamide-adenine dinucleotide',\n",
      "                          'NDP',\n",
      "                          'D2F : '\n",
      "                          '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'NDP : NADPH '\n",
      "                          'DIHYDRO-NICOTINAMIDE-ADENINE-DINUCLEOTIDE PHOSPHATE',\n",
      "                          'SO4 : SULFATE ION',\n",
      "                          'NDP : Dihydronicotinamide-adenine dinucleotide '\n",
      "                          'phosphate',\n",
      "                          'NDP : Reduced nicotinamide adenine dinucleotide '\n",
      "                          'phosphate',\n",
      "                          'NDP : TPNH',\n",
      "                          'SO4 : Sulfate',\n",
      "                          'SO4 : Sulfate dianion',\n",
      "                          'SO4 : Sulfate(2-)',\n",
      "                          'SO4 : Sulfuric acid ion(2-)',\n",
      "                          'D2F : '\n",
      "                          '5-[(1E)-2-(2-methoxyphenyl)hex-1-en-1-yl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'SO4 : sulfate',\n",
      "                          'D2F : '\n",
      "                          '5-[(E)-2-(2-methoxyphenyl)hex-1-enyl]furo[2,3-d]pyrimidine-2,4-diamine',\n",
      "                          'NDP : '\n",
      "                          '[[(2R,3S,4R,5R)-5-(3-aminocarbonyl-4H-pyridin-1-yl)-3,4-dihydroxy-oxolan-2-yl]methoxy-hydroxy-phosphoryl] '\n",
      "                          '[(2R,3R,4R,5R)-5-(6-aminopurin-9-yl)-3-hydroxy-4-phosphonooxy-oxolan-2-yl]methyl '\n",
      "                          'hydrogen phosphate'],\n",
      " 't_all_enzyme_names': ['Oxidoreductases',\n",
      "                        'Acting on the CH-NH group of donors',\n",
      "                        'With NAD(+) or NADP(+) as acceptor',\n",
      "                        'Dihydrofolate reductase',\n",
      "                        '1.5.1.3 : Dihydrofolate reductase',\n",
      "                        '5,6,7,8-tetrahydrofolate:NADP(+) oxidoreductase'],\n",
      " 't_all_go_terms': ['cytoplasm',\n",
      "                    'mitochondrion',\n",
      "                    'cytosol',\n",
      "                    'folic acid binding',\n",
      "                    'oxidoreductase activity',\n",
      "                    'NADPH binding',\n",
      "                    'sequence-specific mRNA binding',\n",
      "                    'RNA binding',\n",
      "                    'mRNA binding',\n",
      "                    'NADP binding',\n",
      "                    'methotrexate binding',\n",
      "                    'dihydrofolate reductase activity',\n",
      "                    'translation repressor activity, mRNA regulatory element '\n",
      "                    'binding',\n",
      "                    'drug binding',\n",
      "                    'one-carbon metabolic process',\n",
      "                    'negative regulation of translation',\n",
      "                    'folic acid metabolic process',\n",
      "                    'response to methotrexate',\n",
      "                    'regulation of removal of superoxide radicals',\n",
      "                    'tetrahydrobiopterin biosynthetic process',\n",
      "                    'tetrahydrofolate metabolic process',\n",
      "                    'tetrahydrofolate biosynthetic process',\n",
      "                    'oxidation-reduction process',\n",
      "                    'regulation of transcription involved in G1/S transition '\n",
      "                    'of mitotic cell cycle',\n",
      "                    'positive regulation of nitric-oxide synthase activity',\n",
      "                    'axon regeneration',\n",
      "                    'dihydrofolate metabolic process'],\n",
      " 't_all_sequence_family': ['IPR001796 : Dihydrofolate reductase domain',\n",
      "                           'IPR024072 : Dihydrofolate reductase-like domain '\n",
      "                           'superfamily',\n",
      "                           'PF00186 : DHFR_1',\n",
      "                           'CL0387 : DHFred'],\n",
      " 't_all_structure_family': ['3-Layer(aba) Sandwich',\n",
      "                            'Alpha Beta',\n",
      "                            '3.40.430.10',\n",
      "                            'Dihydrofolate Reductase, subunit A',\n",
      "                            'Dihydrofolate Reductase, subunit A'],\n",
      " 't_citation_authors': ['Cody V', 'Piraino J', 'Pace J', 'Li W', 'Gangjee A'],\n",
      " 't_citation_title': ['Preferential selection of isomer binding from chiral '\n",
      "                      'mixtures: alternate binding modes observed for the E '\n",
      "                      'and Z isomers of a series of 5-substituted '\n",
      "                      '2,4-diaminofuro[2,3-d]pyrimidines as ternary complexes '\n",
      "                      'with NADPH and human dihydrofolate reductase.'],\n",
      " 't_entry_authors': ['Cody V'],\n",
      " 't_entry_info': ['POTASSIUM PHOSPHATE',\n",
      "                  'AMMONIUM SULFATE',\n",
      "                  'ETHANOL',\n",
      "                  'MOSFLM',\n",
      "                  'SCALA',\n",
      "                  'Image plate',\n",
      "                  'RIGAKU RAXIS IV',\n",
      "                  'X-ray diffraction',\n",
      "                  'REFMAC',\n",
      "                  'MOLECULAR REPLACEMENT',\n",
      "                  'MOLREP'],\n",
      " 't_entry_title': ['Preferential Selection of Isomer Binding from Chiral '\n",
      "                   'Mixtures: Alternate Binding Modes Observed for the E- and '\n",
      "                   'Z-isomers of a Series of 5-Substituted '\n",
      "                   '2,4-Diaminofuro[2,3-d]pyrimidines as Ternary Complexes '\n",
      "                   'with NADPH and Human Dihydrofolate Reductase'],\n",
      " 't_expression_organism_name': ['Escherichia coli',\n",
      "                                'Bacterium Coli',\n",
      "                                'Enterococcus Coli',\n",
      "                                'Bacterium 10a',\n",
      "                                'Escherichia Coli',\n",
      "                                'Escherichia Sp. 3_2_53faa',\n",
      "                                'Escherichia/Shigella Coli',\n",
      "                                'Ecolx',\n",
      "                                'Bacterium E3',\n",
      "                                'Bacterium Coli Commune',\n",
      "                                'E. Coli',\n",
      "                                'Bacillus Coli',\n",
      "                                'Escherichia Sp. Mar',\n",
      "                                'Escherichia coli',\n",
      "                                'Escherichia',\n",
      "                                'Enterobacteriaceae',\n",
      "                                'Enterobacterales',\n",
      "                                'Gammaproteobacteria',\n",
      "                                'Proteobacteria',\n",
      "                                'Bacteria'],\n",
      " 't_journal': ['Acta Crystallogr. D Biol. Crystallogr.'],\n",
      " 't_mesh_terms': ['Crystallography, X-Ray,Humans,Hydrophobic and Hydrophilic '\n",
      "                  'Interactions,Models, Molecular,NADP,Protein Structure, '\n",
      "                  'Tertiary,Pyrimidines,Stereoisomerism,Tetrahydrofolate '\n",
      "                  'Dehydrogenase'],\n",
      " 't_molecule_info': ['protein structure',\n",
      "                     'homo',\n",
      "                     'monomer',\n",
      "                     'Dihydrofolate reductase',\n",
      "                     'Dihydrofolate reductase',\n",
      "                     'protein structure',\n",
      "                     'homo',\n",
      "                     'monomer',\n",
      "                     'DHFR',\n",
      "                     'P00374',\n",
      "                     'P00374-2',\n",
      "                     'Protein has possible alternate isoforms',\n",
      "                     'DHFR',\n",
      "                     'Protein has possible natural variant ',\n",
      "                     'Nucleotide binding - NADP',\n",
      "                     'DYR_HUMAN',\n",
      "                     'DYR_HUMAN'],\n",
      " 't_molecule_sequence': 'VGSLNCIVAVSQNMGIGKNGDLPWPPLRNEFRYFQRMTTTSSVEGKQNLVIMGKKTWFSIPEKNRPLKGRINLVLSRELKEPPQGAHFLSRSLDDALKLTEQPELANKVDMVWIVGGSSVYKEAMNHPGHLKLFVTRIMQDFESDTFFPEIDLEKYKLLPEYPGVLSDVQEEKGIKYKFEVYEKND',\n",
      " 't_organism_name': ['Homo sapiens',\n",
      "                     'Man',\n",
      "                     'Homo Sapiens (Human)',\n",
      "                     'Human',\n",
      "                     'Homo Sapiens',\n",
      "                     'Homo sapiens',\n",
      "                     'Homo',\n",
      "                     'Homininae',\n",
      "                     'Hominidae',\n",
      "                     'Primates',\n",
      "                     'Mammalia',\n",
      "                     'Chordata',\n",
      "                     'Metazoa',\n",
      "                     'Eukaryota'],\n",
      " 'tax_id': [9606],\n",
      " 'tax_query': [9606],\n",
      " 'title': 'Preferential Selection of Isomer Binding from Chiral Mixtures: '\n",
      "          'Alternate Binding Modes Observed for the E- and Z-isomers of a '\n",
      "          'Series of 5-Substituted 2,4-Diaminofuro[2,3-d]pyrimidines as '\n",
      "          'Ternary Complexes with NADPH and Human Dihydrofolate Reductase',\n",
      " 'uniprot': ['P00374 : DYR_HUMAN'],\n",
      " 'uniprot_accession': ['P00374', 'P00374-2'],\n",
      " 'uniprot_accession_best': ['P00374'],\n",
      " 'uniprot_best': ['P00374 : DYR_HUMAN'],\n",
      " 'uniprot_coverage': [0.99],\n",
      " 'uniprot_features': ['Protein has possible alternate isoforms',\n",
      "                      'DHFR',\n",
      "                      'Protein has possible natural variant ',\n",
      "                      'Nucleotide binding - NADP'],\n",
      " 'uniprot_id': ['DYR_HUMAN', 'DYR_HUMAN'],\n",
      " 'uniprot_id_best': ['DYR_HUMAN'],\n",
      " 'uniprot_non_canonical': ['P00374-2 : DYR_HUMAN'],\n",
      " 'unp_count': 1,\n",
      " 'unp_nf90_accession': ['B0YJ76',\n",
      "                        'A0A2K6C3Y8',\n",
      "                        'S5WD14',\n",
      "                        'S5VM81',\n",
      "                        'P00374',\n",
      "                        'A0A024RAQ3'],\n",
      " 'unp_nf90_id': ['B0YJ76_HUMAN',\n",
      "                 'A0A2K6C3Y8_MACNE',\n",
      "                 'S5WD14_SHISS',\n",
      "                 'S5VM81_ECO57',\n",
      "                 'DYR_HUMAN',\n",
      "                 'A0A024RAQ3_HUMAN'],\n",
      " 'unp_nf90_organism': ['Homo sapiens (Human)',\n",
      "                       'Macaca nemestrina (Pig-tailed macaque)',\n",
      "                       'Shigella sonnei (strain Ss046)',\n",
      "                       'Escherichia coli O157:H7',\n",
      "                       'Homo sapiens (Human)',\n",
      "                       'Homo sapiens (Human)'],\n",
      " 'unp_nf90_protein_name': ['Dihydrofolate reductase',\n",
      "                           'DHFR domain-containing protein',\n",
      "                           'Dihydrofolate reductase',\n",
      "                           'Dihydrofolate reductase',\n",
      "                           'Dihydrofolate reductase',\n",
      "                           'Dihydrofolate reductase'],\n",
      " 'unp_nf90_tax_id': ['9606', '9545', '300269', '83334', '9606', '9606']}\n"
     ]
    }
   ],
   "source": [
    "pprint(second_results[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "source": [
    "A full list of available search terms is available using the following command."
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 442 available search terms\n",
      "dict_keys(['abstracttext_unassigned', 't_abstracttext_unassigned', 'q_abstracttext_unassigned', 'all_assembly_composition', 't_molecule_info', 'q_all_assembly_composition', 'all_assembly_form', 'q_all_assembly_form', 'all_assembly_id', 'q_all_assembly_id', 'all_assembly_mol_wt', 'q_all_assembly_mol_wt', 'all_assembly_type', 'q_all_assembly_type', 'all_authors', 'q_all_authors', 'all_molecule_names', 'q_all_molecule_names', 'all_num_interacting_entity_id', 'q_all_num_interacting_entity_id', 'assembly_composition', 'q_assembly_composition', 'assembly_form', 'q_assembly_form', 'assembly_id', 'q_assembly_id', 'assembly_mol_wt', 'q_assembly_mol_wt', 'assembly_num_component', 'q_assembly_num_component', 'assembly_type', 'q_assembly_type', 'beam_source_name', 'q_beam_source_name', 'biological_cell_component', 'all_go_terms', 'q_all_go_terms', 't_all_go_terms', 'q_biological_cell_component', 'biological_function', 'q_biological_function', 'biological_process', 'q_biological_process', 'bound_compound_id', 'q_bound_compound_id', 'bound_compound_name', 'q_bound_compound_name', 'bound_compound_synonym', 'q_bound_compound_synonym', 'bound_compound_systematic_name', 'q_bound_compound_systematic_name', 'bound_compound_weight', 'q_bound_compound_weight', 'cath_architecture', 'all_structure_family', 'q_all_structure_family', 't_all_structure_family', 'q_cath_architecture', 'cath_class', 'q_cath_class', 'cath_code', 'q_cath_code', 'cath_homologous_superfamily', 'q_cath_homologous_superfamily', 'cath_topology', 'q_cath_topology', 'cell_a', 'q_cell_a', 'cell_alpha', 'q_cell_alpha', 'cell_b', 'q_cell_b', 'cell_beta', 'q_cell_beta', 'cell_c', 'q_cell_c', 'cell_gamma', 'q_cell_gamma', 'chain_id', 'q_chain_id', 'citation_authors', 't_citation_authors', 'q_citation_authors', 'citation_doi', 'q_citation_doi', 'citation_title', 't_citation_title', 'q_citation_title', 'citation_year', 'q_citation_year', 'cofactor_class', 't_all_compound_names', 'q_cofactor_class', 'cofactor_id', 'q_cofactor_id', 'compound_id', 'q_compound_id', 'compound_name', 'all_compound_names', 'q_all_compound_names', 'q_compound_name', 'compound_synonym', 'q_compound_synonym', 'compound_systematic_name', 'q_compound_systematic_name', 'compound_weight', 'q_compound_weight', 'crystallisation_cond', 'q_crystallisation_cond', 'crystallisation_method', 'q_crystallisation_method', 'crystallisation_ph', 'q_crystallisation_ph', 'crystallisation_reservoir', 't_entry_info', 'q_crystallisation_reservoir', 'crystallisation_temperature', 'q_crystallisation_temperature', 'data_collection_date', 'q_data_collection_date', 'data_collection_year', 'q_data_collection_year', 'data_quality', 'q_data_quality', 'data_reduction_software', 'q_data_reduction_software', 'data_scaling_software', 'q_data_scaling_software', 'deposition_date', 'q_deposition_date', 'deposition_site', 'q_deposition_site', 'deposition_year', 'q_deposition_year', 'detector', 'q_detector', 'detector_type', 'q_detector_type', 'diffraction_protocol', 'q_diffraction_protocol', 'diffraction_source_type', 'q_diffraction_source_type', 'diffraction_wavelengths', 'q_diffraction_wavelengths', 'ec_hierarchy_name', 'all_enzyme_names', 'q_all_enzyme_names', 't_all_enzyme_names', 'q_ec_hierarchy_name', 'ec_number', 'q_ec_number', 'entity_id', 'q_entity_id', 'entity_weight', 'q_entity_weight', 'entry_author_list', 'q_entry_author_list', 'entry_authors', 't_entry_authors', 'q_entry_authors', 'entry_entity', 'entry_lig_entity', 'q_entry_lig_entity', 'entry_organism_scientific_name', 'enzyme_name', 'q_enzyme_name', 'enzyme_num_name', 'q_enzyme_num_name', 'enzyme_systematic_name', 'q_enzyme_systematic_name', 'experiment_data_available', 'q_experiment_data_available', 'experimental_method', 'q_experimental_method', 'expression_host_sci_name', 'expression_organism_name', 'q_expression_organism_name', 't_expression_organism_name', 'q_expression_host_sci_name', 'expression_host_synonyms', 'q_expression_host_synonyms', 'expression_host_tax_id', 'q_expression_host_tax_id', 'gene_name', 'q_gene_name', 'genus', 'q_genus', 'go_id', 'q_go_id', 'go_mapping', 'q_go_mapping', 'has_bound_molecule', 'q_has_bound_molecule', 'has_carb_polymer', 'q_has_carb_polymer', 'has_cofactor', 'q_has_cofactor', 'has_modified_residues', 'q_has_modified_residues', 'has_reactant', 'q_has_reactant', 'homologus_pdb_entity_id', 'q_homologus_pdb_entity_id', 'int_lig_entity', 'q_int_lig_entity', 'interacting_ligands', 'q_interacting_ligands', 'interpro', 'all_sequence_family', 'q_all_sequence_family', 't_all_sequence_family', 'q_interpro', 'interpro_accession', 'q_interpro_accession', 'interpro_dom', 'q_interpro_dom', 'interpro_dom_acc', 'q_interpro_dom_acc', 'interpro_dom_name', 'q_interpro_dom_name', 'interpro_name', 'q_interpro_name', 'interpro_supfam', 'q_interpro_supfam', 'interpro_supfam_acc', 'q_interpro_supfam_acc', 'interpro_supfam_name', 'q_interpro_supfam_name', 'inv_overall_quality', 'q_inv_overall_quality', 'journal', 't_journal', 'q_journal', 'journal_page', 'q_journal_page', 'journal_volume', 'q_journal_volume', 'matthews_coefficient', 'q_matthews_coefficient', 'max_observed_residues', 'q_max_observed_residues', 'mesh_terms', 't_mesh_terms', 'q_mesh_terms', 'model_quality', 'q_model_quality', 'modified_residue_flag', 'q_modified_residue_flag', 'molecule_name', 'q_molecule_name', 'molecule_sequence', 'q_molecule_sequence', 't_molecule_sequence', 'molecule_synonym', 'q_molecule_synonym', 'molecule_type', 'q_molecule_type', 'mutation', 'q_mutation', 'nigli_cell_a', 'q_nigli_cell_a', 'nigli_cell_alpha', 'q_nigli_cell_alpha', 'nigli_cell_b', 'q_nigli_cell_b', 'nigli_cell_beta', 'q_nigli_cell_beta', 'nigli_cell_c', 'q_nigli_cell_c', 'nigli_cell_gamma', 'q_nigli_cell_gamma', 'nigli_cell_symmetry', 'q_nigli_cell_symmetry', 'num_interacting_entity_id', 'q_num_interacting_entity_id', 'num_r_free_reflections', 'q_num_r_free_reflections', 'number_of_bound_entities', 'q_number_of_bound_entities', 'number_of_bound_molecules', 'q_number_of_bound_molecules', 'number_of_copies', 'q_number_of_copies', 'number_of_models', 'q_number_of_models', 'number_of_polymer_entities', 'q_number_of_polymer_entities', 'number_of_polymer_residues', 'q_number_of_polymer_residues', 'number_of_polymers', 'q_number_of_polymers', 'number_of_protein_chains', 'q_number_of_protein_chains', 'organism_scientific_name', 'organism_name', 'q_organism_name', 't_organism_name', 'q_organism_scientific_name', 'organism_synonyms', 'q_organism_synonyms', 'overall_quality', 'q_overall_quality', 'pdb_accession', 'q_pdb_accession', 'pdb_format_compatible', 'q_pdb_format_compatible', 'pdb_id', 'q_pdb_id', 'percent_solvent', 'q_percent_solvent', 'pfam', 'q_pfam', 'pfam_accession', 'q_pfam_accession', 'pfam_clan', 'q_pfam_clan', 'pfam_clan_name', 'q_pfam_clan_name', 'pfam_description', 'q_pfam_description', 'pfam_name', 'q_pfam_name', 'pivot_resolution', 'q_pivot_resolution', 'polymer_length', 'q_polymer_length', 'prefered_assembly_id', 'q_prefered_assembly_id', 'primary_wavelength', 'q_primary_wavelength', 'processing_site', 'q_processing_site', 'pubmed_author_list', 'q_pubmed_author_list', 'pubmed_authors', 'q_pubmed_authors', 'pubmed_id', 'q_pubmed_id', 'r_factor', 'q_r_factor', 'r_free', 'q_r_free', 'r_work', 'q_r_work', 'rank', 'q_rank', 'reactant_id', 'q_reactant_id', 'refinement_software', 'q_refinement_software', 'release_date', 'q_release_date', 'release_year', 'q_release_year', 'resolution', 'q_resolution', 'revision_date', 'q_revision_date', 'revision_year', 'q_revision_year', 'sample_preparation_method', 'q_sample_preparation_method', 'seq_100_cluster_number', 'q_seq_100_cluster_number', 'seq_100_cluster_rank', 'q_seq_100_cluster_rank', 'seq_30_cluster_number', 'q_seq_30_cluster_number', 'seq_30_cluster_rank', 'q_seq_30_cluster_rank', 'seq_40_cluster_number', 'q_seq_40_cluster_number', 'seq_40_cluster_rank', 'q_seq_40_cluster_rank', 'seq_50_cluster_number', 'q_seq_50_cluster_number', 'seq_50_cluster_rank', 'q_seq_50_cluster_rank', 'seq_70_cluster_number', 'q_seq_70_cluster_number', 'seq_70_cluster_rank', 'q_seq_70_cluster_rank', 'seq_90_cluster_number', 'q_seq_90_cluster_number', 'seq_90_cluster_rank', 'q_seq_90_cluster_rank', 'seq_95_cluster_number', 'q_seq_95_cluster_number', 'seq_95_cluster_rank', 'q_seq_95_cluster_rank', 'serial_crystal_experiment', 'q_serial_crystal_experiment', 'spacegroup', 'q_spacegroup', 'status', 'q_status', 'struct_asym_id', 'q_struct_asym_id', 'structure_determination_method', 'q_structure_determination_method', 'structure_solution_software', 'q_structure_solution_software', 'superkingdom', 'q_superkingdom', 'tax_id', 'q_tax_id', 'tax_query', 'q_tax_query', 'title', 't_entry_title', 'q_title', 'uniprot', 'q_uniprot', 'uniprot_accession', 'q_uniprot_accession', 'uniprot_accession_best', 'q_uniprot_accession_best', 'uniprot_best', 'q_uniprot_best', 'uniprot_coverage', 'q_uniprot_coverage', 'uniprot_features', 'q_uniprot_features', 'uniprot_id', 'q_uniprot_id', 'uniprot_id_best', 'q_uniprot_id_best', 'uniprot_non_canonical', 'q_uniprot_non_canonical', 'unp_nf90_accession', 'q_unp_nf90_accession', 'unp_nf90_id', 'q_unp_nf90_id', 'unp_nf90_organism', 'q_unp_nf90_organism', 'unp_nf90_protein_name', 'q_unp_nf90_protein_name', 'unp_nf90_tax_id', 'q_unp_nf90_tax_id', '_version_', 'q_unp_count', 'unp_count'])\n",
      "214\n"
     ]
    }
   ],
   "source": [
    "print('There are {} available search terms'.format(len(second_results[0].keys())))\n",
    "print(second_results[0].keys())\n",
    "keys_without_q = [q for q in second_results[0].keys() if not (q.startswith('q_') or (q.startswith('t_')))]\n",
    "print(len(keys_without_q))"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see we get lots of data back about the individual molecule we have searched for and the PDB entries in which it is contained. \n",
    "\n",
    "We can get the PDB ID and experimental method for this first row as follows.\n",
    "Note that experimental method is a list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3nxv\n",
      "['X-ray diffraction']\n"
     ]
    }
   ],
   "source": [
    "print(second_results[0].get('pdb_id'))\n",
    "print(second_results[0].get('experimental_method'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can restrict the results to only the information we want using a filter so its easier to see the information we want."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3rd search\n",
      "Number of results: 79\n",
      "[{'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxv'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hqz'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1s3u'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1mvs'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1ohk'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3s3v'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2w3b'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1s3w'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1pd8'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4kfj'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1kmv'},\n",
      " {'experimental_method': ['Solution NMR'], 'pdb_id': '1yho'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1pdb'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3s7a'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hvb'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4kbn'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '6a7c'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4m6j'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hui'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1mvt'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nu0'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3fs6'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '6de4'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxy'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3ghw'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hve'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1pd9'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4m6l'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1dhf'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3eig'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1hfp'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxr'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3oaf'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '6dav'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1dlr'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hpb'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1u71'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5ht5'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1u72'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxt'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1hfq'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3f8y'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1s3v'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxx'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4m6k'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5ht4'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4keb'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1boz'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1dls'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '6a7e'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1kms'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3gyf'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hsr'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3gi2'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2c2t'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nxo'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2c2s'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4kd7'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hsu'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3f91'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2dhf'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4g95'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2w3m'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1drf'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4qjc'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '5hqy'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1ohj'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3nzd'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3ghc'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4qhv'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '1hfr'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4kak'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3l3r'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3n0h'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '4ddr'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3ghv'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '2w3a'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3f8z'},\n",
      " {'experimental_method': ['X-ray diffraction'], 'pdb_id': '3ntz'}]\n"
     ]
    }
   ],
   "source": [
    "print('3rd search')\n",
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\",organism_name=\"Human\")\n",
    "filter_terms = ['pdb_id', 'experimental_method']\n",
    "third_results = run_search(search_terms, filter_terms)\n",
    "pprint(third_results)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6) Analysing and plotting the results\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We are going to use a Python package called Pandas to help us sort and visualise the results\n",
    "\n",
    "\n",
    "First we have to do a bit of housekeeping, some of the results are lists (a PDB entry can have more than one experimental method or organism for example) so we need to change them into strings so we can use them in a graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def change_lists_to_strings(results):\n",
    "    \"\"\"\n",
    "    input - list of results from search\n",
    "    output - list of results with lists changed into strings\n",
    "    \"\"\"\n",
    "    for row in results:\n",
    "        for data in row:\n",
    "            if type(row[data]) == list:\n",
    "                # if there are any numbers in the list change them into strings\n",
    "                row[data] = [str(a) for a in row[data]]\n",
    "                # unique and sort the list and then change the list into a string\n",
    "                row[data] = ','.join(sorted(list(set(row[data]))))\n",
    "                \n",
    "    return results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxv'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hqz'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1s3u'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1mvs'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1ohk'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3s3v'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2w3b'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1s3w'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1pd8'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4kfj'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1kmv'},\n",
      " {'experimental_method': 'Solution NMR', 'pdb_id': '1yho'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1pdb'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3s7a'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hvb'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4kbn'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '6a7c'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4m6j'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hui'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1mvt'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nu0'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3fs6'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '6de4'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxy'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3ghw'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hve'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1pd9'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4m6l'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1dhf'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3eig'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1hfp'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxr'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3oaf'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '6dav'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1dlr'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hpb'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1u71'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5ht5'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1u72'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxt'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1hfq'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3f8y'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1s3v'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxx'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4m6k'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5ht4'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4keb'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1boz'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1dls'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '6a7e'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1kms'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3gyf'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hsr'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3gi2'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2c2t'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nxo'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2c2s'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4kd7'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hsu'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3f91'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2dhf'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4g95'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2w3m'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1drf'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4qjc'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '5hqy'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1ohj'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3nzd'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3ghc'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4qhv'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '1hfr'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4kak'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3l3r'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3n0h'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '4ddr'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3ghv'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '2w3a'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3f8z'},\n",
      " {'experimental_method': 'X-ray diffraction', 'pdb_id': '3ntz'}]\n"
     ]
    }
   ],
   "source": [
    "results = change_lists_to_strings(third_results)\n",
    "pprint(results)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that the only thing that changed is ['X-ray diffraction'] is now 'X-ray diffraction'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we wanted to know the experimental methods used to determine structures of Human Dihydrofolate reductase we could loop through the results and count how many entries use each experimental method. \n",
    "\n",
    "We can use a Python package called Pandas to do this for us. \n",
    "It changes the results into a mini database - called a DataFrame. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   experimental_method pdb_id\n",
      "0    X-ray diffraction   3nxv\n",
      "1    X-ray diffraction   5hqz\n",
      "2    X-ray diffraction   1s3u\n",
      "3    X-ray diffraction   1mvs\n",
      "4    X-ray diffraction   1ohk\n",
      "..                 ...    ...\n",
      "74   X-ray diffraction   4ddr\n",
      "75   X-ray diffraction   3ghv\n",
      "76   X-ray diffraction   2w3a\n",
      "77   X-ray diffraction   3f8z\n",
      "78   X-ray diffraction   3ntz\n",
      "\n",
      "[79 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "def pandas_dataset(list_of_results):\n",
    "    results = change_lists_to_strings(list_of_results) # we have added our function to change lists to strings\n",
    "    df = pd.DataFrame(results)\n",
    "\n",
    "    return df\n",
    "\n",
    "df = pandas_dataset(list_of_results=results)\n",
    "print(df)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use the this to count how many PDB codes there are for each experimental method\n",
    "This groups PDB IDs by experimental method and then counts the number of unique PDB IDs per method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "experimental_method\n",
      "Solution NMR          1\n",
      "X-ray diffraction    78\n",
      "Name: pdb_id, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "ds = df.groupby('experimental_method')['pdb_id'].nunique()\n",
    "print(ds)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can find which experimental method has the greatest (max) or lowest (min) number of entries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "78\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "dt = ds.max()\n",
    "print(dt)\n",
    "dt = ds.min()\n",
    "print(dt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can sort the results so its in decending order and then the first value is the experimental method with the highest number of results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "'X-ray diffraction'"
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.sort_values(ascending=False).index[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or sort ascending so the experimental method with the lowest number of results is given"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "'Solution NMR'"
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.sort_values(ascending=True).index[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or we can then very easily plot these results as a bar chart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "<AxesSubplot:xlabel='experimental_method'>"
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds.plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will make this into two functions so we can use them again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pandas_count(list_of_results, column_to_group_by):\n",
    "    df = pandas_dataset(list_of_results)\n",
    "    ds = df.groupby(column_to_group_by)['pdb_id'].nunique()\n",
    "    return ds\n",
    "    \n",
    "def pandas_min_max(list_of_results, column_to_group_by, get_min=True):\n",
    "    df = pandas_dataset(list_of_results)\n",
    "    if get_min:\n",
    "        ds = df.groupby(column_to_group_by)['pdb_id'].min()\n",
    "    else:\n",
    "        ds = df.groupby(column_to_group_by)['pdb_id'].max()\n",
    "    return ds\n",
    "    \n",
    "def pandas_plot(list_of_results, column_to_group_by, graph_type='bar'):\n",
    "    ds = pandas_count(list_of_results=list_of_results, column_to_group_by=column_to_group_by)\n",
    "    ds.plot(kind=graph_type)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One for counting the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "experimental_method\nSolution NMR          1\nX-ray diffraction    78\nName: pdb_id, dtype: int64"
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandas_count(list_of_results=results, column_to_group_by='experimental_method')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One for getting min or max"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updated search\n",
      "Number of results: 79\n"
     ]
    },
    {
     "data": {
      "text/plain": "resolution\n1.050    1kmv\n1.090    1kms\n1.201    4m6j\n1.210    5hsr\n1.230    3fs6\n1.240    3ghw\n1.270    2w3b\n1.300    3ghc\n1.350    3ntz\n1.396    4m6k\n1.400    2c2s\n1.450    3f8y\n1.460    5hqy\n1.500    2c2t\n1.530    3gi2\n1.550    6dav\n1.600    2w3m\n1.610    4qhv\n1.620    4qjc\n1.650    5hpb\n1.700    3eig\n1.760    4kfj\n1.800    1mvt\n1.840    4kbn\n1.850    6a7e\n1.900    1mvs\n1.920    3n0h\n2.000    1drf\n2.010    3f8z\n2.050    4ddr\n2.060    6a7c\n2.100    1boz\n2.200    1pd9\n2.300    1dhf\n2.411    6de4\n2.500    1ohj\n2.715    4kd7\nName: pdb_id, dtype: object"
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('updated search')\n",
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\",organism_name=\"Human\")\n",
    "filter_terms = ['pdb_id', 'resolution']\n",
    "new_results = run_search(search_terms, filter_terms)\n",
    "pandas_min_max(list_of_results=new_results, column_to_group_by='resolution')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "and one for plotting the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pandas_plot(list_of_results=results, column_to_group_by='experimental_method')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Remember this only searched through the first 10 results.\n",
    "To increase the number of entries we have to run the search again, this time setting number_of_rows to a number in the function run_search. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results: 79\n"
     ]
    }
   ],
   "source": [
    "search_terms = Q(molecule_name=\"Dihydrofolate reductase\",organism_name=\"Human\")\n",
    "results = run_search(search_terms, number_of_rows=10000)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then we can count the results using our pandas function above"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "experimental_method\nSolution NMR          1\nX-ray diffraction    78\nName: pdb_id, dtype: int64"
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandas_count(list_of_results=results, column_to_group_by='experimental_method')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Changing the result so it groups by release year of the PDB entries. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "release_year\n1990     2\n1992     1\n1995     2\n1998     6\n2002     2\n2003     5\n2004     3\n2005     3\n2007     2\n2009    13\n2010     7\n2011     7\n2012     1\n2013     8\n2014     1\n2015     2\n2017    10\n2018     2\n2019     2\nName: pdb_id, dtype: int64"
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandas_count(list_of_results=results, column_to_group_by='release_year')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And then plot the number of entries released per year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pandas_plot(list_of_results=results, column_to_group_by='release_year')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can make this into a line graph "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pandas_plot(list_of_results=results, column_to_group_by='release_year', graph_type='line')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Try changing the term you want to search for and see if you get interesting results."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7) searching for two terms at once\n",
    "\n",
    "It would be interesting to see how many PDB entries were solved by each experimental method per year. \n",
    "\n",
    "we can use the tag \"release_year\" to get the year of release of each entry\n",
    "\n",
    "We have to define a new function to group entries by two terms.\n",
    "\n",
    "When we do the search we have to filter the results by the terms we want to plot otherwise it takes too long to run. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results: 1969\n"
     ]
    }
   ],
   "source": [
    "search_terms = Q(all_enzyme_names=\"Lysozyme\")\n",
    "filter_results = ['beam_source_name','release_year', 'pdb_id']\n",
    "results = run_search(search_terms, filter_results, number_of_rows=10000)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This will take a while as it will return lots of results. \n",
    "We can then define a function to group the results by two terms. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pandas_plot_multi_groupby(results, first_column_to_group_by, second_column_to_group_by, y_axis='pdb_id', graph_type='line'):\n",
    "    \n",
    "    df = pandas_dataset(results)\n",
    "    new_df = df.groupby([first_column_to_group_by, second_column_to_group_by])\n",
    "    ds = new_df.count().unstack().reset_index(first_column_to_group_by)\n",
    "    ds.plot(x=first_column_to_group_by, y=y_axis, kind=graph_type).legend(bbox_to_anchor=(1,1))\n",
    "    \n",
    "def pandas_plot_multi_groupby_min(results, first_column_to_group_by, second_column_to_group_by, graph_type='line', use_min=False, use_max=False):\n",
    "    \n",
    "    df = pandas_dataset(results)\n",
    "    new_df = df.groupby([first_column_to_group_by])[second_column_to_group_by]\n",
    "    ds = None\n",
    "    if use_min:\n",
    "        ds = new_df.min()\n",
    "    elif use_max:\n",
    "        ds = new_df.max()\n",
    "    else:\n",
    "        print('specify either use_min or use_max')\n",
    "        return None\n",
    "    ds.plot(x=first_column_to_group_by, y=second_column_to_group_by, kind=graph_type)\n",
    "\n",
    "def pandas_box_plot(results, first_column_to_group_by, second_column_to_group_by):\n",
    "    df = pandas_dataset(results)\n",
    "    df.boxplot(column=second_column_to_group_by,by=first_column_to_group_by)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pandas_plot_multi_groupby(results, 'release_year', 'beam_source_name')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This shows us that rotating anodes were used as the major source of radiation until around 2004 when Synchrotron's overtook as the major source of radiation. \n",
    "\n",
    "Try editing the queries to plot interesting trends within the PDB"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Questions to answer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1) Electron Microscopy is going through a revolution. Is this leading to a growth in Electron Microscopy PDB entries?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results: 15794\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "search_terms = Q(experimental_method='X-ray diffraction',release_year='2018')\n",
    "filter_results = ['structure_determination_method','release_year', 'pdb_id']\n",
    "results = run_search(search_terms, filter_results, number_of_rows=1000000)\n",
    "pandas_plot(list_of_results=results, column_to_group_by='structure_determination_method')"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2) New refinement programs have got better and there are more methods to validate the quality of strucures in the PDB.\n",
    "Have structures got better over time?\n",
    "We can use \"overall_quality\" to judge this\n",
    "This could be plotted as a groupby or a box plot. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results: 58334\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "search_terms = Q(experimental_method='Electron Microscopy')\n",
    "filter_results = ['experimental_method','release_year', 'pdb_id']\n",
    "results = run_search(search_terms, filter_results, number_of_rows=1000000)\n",
    "pandas_plot_multi_groupby(results, 'release_year', 'experimental_method')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3) Electron Microscopy resolution has been said to be improving. Is this true? \n",
    "hint - the search term and filter can be different.\n",
    "pandas_plot_multi_groupby_min with use_min would be useful to plot this or maybe a box plot?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://www.ebi.ac.uk/pdbe/search/pdb/select?q=experimental_method:\"Electron Microscopy\"&fl=overall_quality,release_year,pdb_id&wt=json&rows=1000000\n",
      "Number of results for Electron Microscopy: 56456\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "search_terms = Q(experimental_method='Electron Microscopy')\n",
    "filter_results = ['overall_quality','release_year', 'pdb_id']\n",
    "results = run_search(search_terms, filter_results, number_of_rows=1000000)\n",
    "pandas_plot_multi_groupby_min(results, 'release_year', 'overall_quality', use_min=True)\n",
    "pandas_box_plot(results, 'release_year', 'overall_quality')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4) It has been said that all the simple structures have been done and that only complicated structures are left. One metric for \"complicated\" could be size of the assembly - assembly_mol_wt would be useful here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of results: 58334\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "search_terms = Q(experimental_method='Electron Microscopy')\n",
    "filter_results = ['assembly_mol_wt','release_year', 'pdb_id']\n",
    "results = run_search(search_terms, filter_results, number_of_rows=1000000)\n",
    "pandas_box_plot(results, 'release_year', 'assembly_mol_wt')\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8-final"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}